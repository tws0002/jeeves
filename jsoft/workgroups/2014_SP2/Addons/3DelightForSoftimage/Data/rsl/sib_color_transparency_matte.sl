/*
	Copyright (c) 2007 TAARNA Studios International.
*/

#ifndef __sib_color_transparency_sl
#define __sib_color_transparency_sl

#include "sib_color_smoothrange.sl"
#include "sib_channel_picker.sl"
#include "sib_color_switch.sl"
#include "sib_boolean_math_logic.sl"

/* This is a RSL transcription of the render tree decscription found
   in sib_color_transparency_matte.spdl */

void sib_color_transparency_matte(
	RGBA_COLOR( i_input );
	float i_colspace;
	float i_channel_rgba, i_channel_hlsa, i_channel_hsva;
	float i_min_thresh;
	float i_max_thresh;
	float i_min_delta;
	float i_max_delta;
	RGBA_COLOR( i_inside_value );
	RGBA_COLOR( i_outside_value );
	float i_invert, i_range_enabled, i_alphamultiply;

	output color o_result;
	output float o_result_a; )
{
	float boolean_op;
	sib_boolean_math_logic(
		i_invert, i_range_enabled, 0, 0, boolean_op );

	float boolean_op2; 
	sib_boolean_math_logic(
		i_invert, i_range_enabled, 1, i_range_enabled, boolean_op2 );

	float picker;
	sib_channel_picker(
		i_input, i_input_a, 
		i_colspace, 
		i_channel_rgba, i_channel_hlsa, i_channel_hsva,
		boolean_op2, i_alphamultiply,
		picker );
	
	RGBA_COLOR( smooth );	
	sib_color_smoothrange(
		picker,
		i_min_thresh, i_max_thresh,
		i_min_delta, i_max_delta,
		i_inside_value, i_inside_value_a, 
		i_outside_value, i_outside_value_a,
		boolean_op,
		smooth, smooth_a );

	sib_color_switch(
		color( picker ), 1,
		smooth, smooth_a,
		i_range_enabled,
		o_result, o_result_a );
}

/* A strange version of the node that is sometimes 
   generated by XSI */
void sib_color_transparency_matte(
	RGBA_COLOR( i_input );
	float i_colspace;
	float i_channel;
	float i_min_thresh;
	float i_max_thresh;
	float i_min_delta;
	float i_max_delta;
	RGBA_COLOR( i_inside_value );
	RGBA_COLOR( i_outside_value );
	float i_invert, i_range_enabled, i_alphamultiply;

	output color o_result;
	output float o_result_a; )
{
	sib_color_transparency_matte(
		RGBA_COLOR_PARAM(i_input),
		i_colspace,
		i_channel, i_channel, i_channel,
		i_min_thresh, i_max_thresh,
		i_min_delta, i_max_delta,
		RGBA_COLOR_PARAM(i_inside_value),
		RGBA_COLOR_PARAM(i_outside_value),
		i_invert, i_range_enabled, i_alphamultiply,
		RGBA_COLOR_PARAM(o_result) );
}

#endif
