# SPDL Generated by XSI Shader Wizard
SPDL
Version = "2.0.0.0";
Reference = "{C6CD5B1C-3353-454C-9F9D-3922CB5A16FF}";
PropertySet "VRaySky_pset"
{
	Parameter "out" output
	{
		GUID = "{C19DF8C9-A557-4E14-9E95-98CE498B95E6}";
		Type = color;
	}
	Parameter "enable_sun_node" input
	{
		GUID = "{54A4521D-996F-403E-8640-D282F587DC92}";
		Type = boolean;
		Value = off;
		Animatable = off;
	}
	Parameter "sun_node" input
	{
		GUID = "{A3058DEA-4E8A-4F8D-93F0-9AF7FECBC03C}";
		Type = integer;
		Value = 0;
		Animatable = off;
	}
	Parameter "sun_turbidity" input
	{
		GUID = "{14889F7B-4406-4EAF-953F-0232D50103E7}";
		Type = scalar;		
		Value = 3.0;
		Value Minimum = 2.0;
		Value Maximum = 20.0;
		Animatable = off;
	}
	Parameter "sun_intensity_multiplier" input
	{
		GUID = "{69EB50A8-31EA-4158-A696-BAC412B64FE7}";
		Type = scalar;
		Value = 1.0;
		Value Minimum = 0.0;
		Value Maximum = 1000000000.0;
		Animatable = off;
	}
	Parameter "sun_size_multiplier" input
	{
		GUID = "{BF017DED-3314-40DB-A64C-099F1A864AE5}";
		Type = scalar;
		Value = 1.0;
		Value Minimum = 0.0;
		Value Maximum = 1000000000.0;
		Animatable = off;
	}
	Parameter "sun_ozone" input
	{
		GUID = "{79C7ED71-300D-4AA4-8567-8AD9516C3E6A}";
		Type = scalar;
		Value = 0.35;
		Value Minimum = 0.0;
		Value Maximum = 1.0;
		Animatable = off;
	}
	Parameter "selected_sun_name" input
	{
		GUID = "{F8074EAC-0CD6-4027-B280-603AA5306B9A}";
		Type = string;
		Value = "";
	}
	Parameter "sun_invisible" input
	{
		GUID = "{D02E1B41-811F-4E91-819C-0512F6D2C6A7}";
		Type = boolean;
		Value = off;
		Animatable = off;	
	}
	Parameter "sun_indirect_horiz_illum" input
	{
		GUID = "{D4A74831-BDFB-4063-A137-E4F422928C2D}";
		Type = scalar;
		Animatable = off;
		Value = 25000.0;
		Value Minimum = 0.0;
		Value Maximum = 50000.0;
	}
	Parameter "sun_sky_model" input
	{
		GUID = "{21136A5B-003B-4051-9DDC-C607018EEB8B}";		
		Type = VT_I4;
		UIType = "Combo";
		Caps = Persistable;
		Items
		{
			"Preetham et al." = 0,
			"CIE Clear" = 1,
			"CIE Overcast" = 2,
		}
		Value = 0;		
	}
		
}
MetaShader "VRaySky_declare"
{
	Name = "VRaySky";
	Type = environment;
	Renderer "mental ray"
	{
		Name = "VRaySky";	
		Options
		{
			"version" = 1;
		}
	}
	Renderer "V-Ray"
	{
		Name = "VRaySky";
		Options
		{
			"version" = 1;
		}
	}
}
Logic 
{	
	Sub enable_sun_node_OnChanged()
		sun_node.Enable(enable_sun_node.Value)
		sun_turbidity.Enable(enable_sun_node.Value)			
		sun_intensity_multiplier.Enable(enable_sun_node.Value)			
		sun_size_multiplier.Enable(enable_sun_node.Value)			
		sun_ozone.Enable(enable_sun_node.Value)	
		sun_invisible.Enable(enable_sun_node.Value)	
		sun_indirect_horiz_illum.Enable(enable_sun_node.Value)	
		sun_sky_model.Enable(enable_sun_node.Value)
			
		if enable_sun_node = FALSE	then
			'Get the sun object and obtain those of its arguments which should be displayed in this property page
			Set oSun = Dictionary.GetObject(selected_sun_name.Value)
			dim found
			found = 0
			set aShaders = oSun.FindShaders(siShaderFilter)
			for each o in aShaders
				if o.Name = "VRaySun" then
					found = 1					
					'Obtain other values
					sun_turbidity.Value = o.m_fTurbidity.Value
					sun_ozone.Value = o.m_fOzone.Value
					sun_intensity_multiplier.Value = o.m_fMultiplier.Value
					sun_size_multiplier.Value = o.m_fSizeMultiplier.Value	
					sun_invisible.Value = o.m_bInvisible.Value
					sun_indirect_horiz_illum.Value = o.m_fIndirect_horiz_illum.Value
					sun_sky_model.Value = o.m_iSky_model.Value
					Exit For
				end if			
			next
				
			'If VRaySun shader is not found then the selected sun is not real VRaySun
			if found = 0 then 
				LogMessage selected_sun_name.Value & " is not a valid VRaySun and it would not be attached to VRaySky!", siError 
				sun_turbidity.Value = 2.0
				sun_ozone = 0
				sun_intensity_multiplier = 0
				sun_size_multiplier = 0
				selected_sun_name.Value = ""
				sun_invisible.Value = off
				sun_indirect_horiz_illum = 0
				sun_sky_model = 0
			end if
		end if		
	End Sub
	
	Sub sun_node_OnChanged()
		set parentshader = sun_ozone.Parent
		set oLayout = parentshader.PPGLayout
		set oItem = oLayout.Item("sun_node")
		dim aComboItems
		aComboItems = oItem.UIItems
		selected_sun_name = aComboItems(2*sun_node.Value)
		'Get the sun object and obtain those of its arguments which should be displayed in this property page
		Set oSun = Dictionary.GetObject(selected_sun_name.Value)
		dim found
		found = 0
		set aShaders = oSun.FindShaders(siShaderFilter)
		for each o in aShaders
			if o.Name = "VRaySun" then
				found = 1
				'Obtain other values
				sun_turbidity.Value = o.m_fTurbidity.Value
				sun_ozone.Value = o.m_fOzone.Value
				sun_intensity_multiplier.Value = o.m_fMultiplier.Value
				sun_size_multiplier.Value = o.m_fSizeMultiplier.Value	
				sun_invisible.Value = o.m_bInvisible.Value	
				sun_indirect_horiz_illum.Value = o.m_fIndirect_horiz_illum.Value
				sun_sky_model.Value = o.m_iSky_model.Value
				Exit For
			end if			
		next
		'If VRaySun shader is not found then the selected sun is not real VRaySun
		if found = 0 then 
			LogMessage selected_sun_name.Value & " is not a VRaySun and it would not be attached to VRaySky!", siError 
			sun_turbidity.Value = 2.0
			sun_ozone = 0
			sun_intensity_multiplier = 0
			sun_size_multiplier = 0
			selected_sun_name.Value = ""
			sun_invisible.Value = off
			sun_indirect_horiz_illum = 0
			sun_sky_model = 0
		end if
		Refresh()
	End Sub
	
	Sub OnInit()
		sun_turbidity.Enable(FALSE)
		sun_size_multiplier.Enable(FALSE)
		sun_intensity_multiplier.Enable(FALSE)
		sun_ozone.Enable(FALSE)	
		sun_invisible.Enable(FALSE)	
		sun_indirect_horiz_illum.Enable(FALSE)
		sun_sky_model.Enable(FALSE)
		set objects = GetVRaySunList()
		set oLayout = sun_ozone.Parent.PPGLayout		
		sun_node.Value = 0			
				
		combosize = objects.count*2 - 1
		if combosize = -1 Then
			combosize = 1
		End If
		dim aComboItems()
		redim aComboItems(combosize)
		dim i 
		i = 0
		for each o in objects			
			aComboItems(2*i) = o.FullName
			'The list could be changed so refresh the items of the selected list
			if selected_sun_name.Value = o.FullName then
				sun_node.Value = i
			end if 
			aComboItems(2*i + 1) = i	
			i = i+1			
		next 		
		set oItem = oLayout.Item("sun_node")			
		if objects.count = 0 then
			aComboItems(0) =  "There is no V-Ray Sun"
			aComboItems(1) = 1
			oItem.UIItems =	aComboItems	
			sun_turbidity = 2.0
			sun_ozone = 0
			sun_intensity_multiplier = 0
			sun_size_multiplier = 0	
			selected_sun_name.Value = ""			
			sun_invisible.Value = off
			sun_indirect_horiz_illum = 0
			sun_sky_model = 0
			enable_sun_node = 0	
			enable_sun_node.Enable(FALSE)
			sun_node.Enable(FALSE)
			sun_node.Value = 0			
		else			
			oItem.UIItems =	aComboItems	
			enable_sun_node.Enable(TRUE)
			sun_node.Enable(TRUE)
			selected_sun_name = aComboItems(2*sun_node.Value)
			enable_sun_node_OnChanged()
		end if		
		Refresh()
	End Sub
}
Defaults
{
	enable_sun_node
	{
		Name = "Manual Sun Node";
	}
	sun_node
	{
		Name = "V-Ray Sun";
		UIType = "Combo";      
		Items
        {
           "There is no V-Ray Light" = 0       
        } 
	}
	sun_turbidity
	{
		Name = "Sun Turbidity";
		UIRange = 2.0 To 10.0;
	}
	sun_intensity_multiplier
	{
		Name = "Sun Intensity Multiplier";
		UIRange = 0.0 To 1.0 by 0.01;
	}
	sun_size_multiplier
	{
		Name = "Sun Size Multiplier";
		UIRange = 0.0 To 100.0 by 5.0;
	}
	sun_ozone
	{
		Name = "Sun Ozone";
		UIRange = 0.0 To 1.0;
	}
	
	sun_indirect_horiz_illum
	{
		Name = "Indirect horiz. illumination";
		UIRange = 0.0 To 10000.0;
	}
	sun_sky_model
	{
		Name = "Sky model";		
	}
	sun_invisible
	{
		Name = "Sun invisible";
	}
}
# NOTE: You must use this same GUID when you make your own shader spdls.
BEGIN "{24810490-56FF-11d2-BF23-00A0C982CE5D}"
Layout "Default"
{
	Group "VRay Sky Parameters"
	{
		enable_sun_node;
		sun_node, LabelWidth(50%,130);
		sun_turbidity, LabelWidth(50%,130);
		sun_ozone, LabelWidth(50%,130);
		sun_intensity_multiplier, LabelWidth(50%,130);
		sun_size_multiplier, LabelWidth(50%,130);
		sun_invisible, LabelWidth(50%,130);
		sun_indirect_horiz_illum, LabelWidth(50%,130);	
		sun_sky_model, LabelWidth(50%,130);		
	}
}
Plugin = Shader
{
	FileName = "VRaySky";
}
END

HelpFile = "http://www.spot3d.com/vray/help/softimage/150R1/vraysun_sky_param.htm#parameters_sky";