' Create_emPolygonizer4_FOVVolsPlugin
' Initial code generated by XSI SDK Wizard

function XSILoadPlugin( in_reg )
	in_reg.Author = "Eric Mootz"
	in_reg.Name = "Create_emPolygonizer4_FOVVolsPlugin"
	in_reg.Email = "info@mootzoid.com"
	in_reg.URL = "http://www.mootzoid.com/"
	in_reg.Major = 1
	in_reg.Minor = 0

	in_reg.RegisterCommand "Create_emPolygonizer4_FOVVols","Create_emPolygonizer4_FOVVols"
	in_reg.RegisterMenu siMenuTbGetCameraID,"Create_emPolygonizer4_FOVVols_Menu",false,false
	'RegistrationInsertionPoint - do not remove this line

	XSILoadPlugin = true
end function

function XSIUnloadPlugin( in_reg )
	dim strPluginName
	strPluginName = in_reg.Name
	'Application.LogMessage strPluginName & " has been unloaded.",siVerbose
	XSIUnloadPlugin = true
end function

function Create_emPolygonizer4_FOVVols_Init( in_ctxt )
	dim oCmd
	set oCmd = in_ctxt.Source
	oCmd.Description = ""
	oCmd.ReturnValue = true

	Create_emPolygonizer4_FOVVols_Init = true
end function

function Create_emPolygonizer4_FOVVols_Execute(  )

	Dim numCubes
	Dim k,n,posz,sclz,sPosz,sSclz
	Dim sl
	Dim cam,obj,mdl

	set sl = GetValue("SelectionList")
	if sl.count = 1 then
		set cam = sl(0)
		if cam.type = "camera" then

			' prompt user for amount of cubes
			numCubes = XSIInputBox( "Enter amount of cubes for the volume:", "FOV Volume", 10 )
			if numCubes <> "" then
			
				'
				numCubes = Int( numCubes )
				if numCubes < 3 then numCubes = 3 end if
			
				' create the model and the property set
				DeselectAll
				Dim oRoot
				set oRoot = Application.ActiveProject.ActiveScene.Root
				set mdl = oRoot.AddModel(,"FOV_Volume")
				'ApplyCns "Pose", mdl.fullname, cam.fullname
				mdl.Kinematics.AddConstraint "Pose", cam
				AddProp "Custom_parameter_list", mdl.fullname, , "CustomPSet"
				SIAddCustomParameter mdl.fullname & ".CustomPSet", "Distance", siDouble, 50, 1, 9999999, , 2053, 10, 100
				SIAddCustomParameter mdl.fullname & ".CustomPSet", "SclX_add", siDouble, 0.25, 0, 9999999, , 2053, 0, 10
				SIAddCustomParameter mdl.fullname & ".CustomPSet", "SclY_add", siDouble, 0.25, 0, 9999999, , 2053, 0, 10
				SIAddCustomParameter mdl.fullname & ".CustomPSet", "SclZ_mul", siDouble, 1.2, 0.000001, 9999999, , 2053, 1, 2
				Dim paramDist,paramSclx,paramScly,paramSclz
				paramDist = mdl.fullname & ".CustomPSet.Distance"
				paramSclx = mdl.fullname & ".CustomPSet.SclX_add"
				paramScly = mdl.fullname & ".CustomPSet.SclY_add"
				paramSclz = mdl.fullname & ".CustomPSet.SclZ_mul"

				' create the volumes
				for n=1 to numCubes

					' create implicit cube
					SIGetPrim "Cube", "Vol" & n, mdl.fullname, , obj
					SetValue obj.fullname & ".cube.length", 1
					' rotation
					Rotate    obj.fullname, 0, 0, 0, siAbsolute, siPivot, siObj, siXYZ, , , , , , , , 0
					' translation
					Translate obj.fullname, 0, 0, 0, siAbsolute, siPivot, siObj, siXYZ, , , , , , , , , , 0
					posz = n*(n+1)*(2*n+1)/6
					sPosz = Join(Split(" " & posz,","),".")
					sPosz = paramDist & " * (" & sPosz & ") / (" & numCubes*(numCubes+1)*(2*numCubes+1)/6 & ")"
					AddExpr   obj.fullname & ".kine.local.posz", "-1 * " & sPosz, true
					' scale
					sclz = n*(n+1)
					sSclz = Join(Split(" " & sclz,","),".")
					AddExpr obj.fullname & ".kine.local.sclx", paramSclx & " + " & "cond( " & cam.fullname & ".camera.fovtype == 1, 1,     " & cam.fullname & ".camera.aspect ) * ( 2 * (" & sPosz & ") + (" & sSclz & " * (" & paramDist & " / (" & numCubes*(numCubes+1)*(2*numCubes+1)/6 & ")" & ")" & ") ) * tan( 0.5 * " & cam.fullname & ".camera.fov )", true  
					AddExpr obj.fullname & ".kine.local.scly", paramScly & " + " & "cond( " & cam.fullname & ".camera.fovtype == 0, 1, 1 / " & cam.fullname & ".camera.aspect ) * ( 2 * (" & sPosz & ") + (" & sSclz & " * (" & paramDist & " / (" & numCubes*(numCubes+1)*(2*numCubes+1)/6 & ")" & ")" & ") ) * tan( 0.5 * " & cam.fullname & ".camera.fov )", true  
					AddExpr obj.fullname & ".kine.local.sclz", paramSclz & " * " & sSclz & " * (" & paramDist & " / (" & numCubes*(numCubes+1)*(2*numCubes+1)/6 & ")" & ")", true
			
				next

				'
				DeselectAll
				SelectObj mdl.fullname

			end if
		else
			MsgBox "No camera selected."
		end if
	else
		MsgBox "No camera selected."
	end if

	' 
	Create_emPolygonizer4_FOVVols_Execute = true
end function

function Create_emPolygonizer4_FOVVols_Menu_Init( in_ctxt )
	dim oMenu
	set oMenu = in_ctxt.Source
	oMenu.AddCommandItem "Create FOV Volume with Cubes","Create_emPolygonizer4_FOVVols"
	Create_emPolygonizer4_FOVVols_Menu_Init = true
end function

