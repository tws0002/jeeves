# SPDL Generated by XSI Shader Wizard
SPDL
Version = "2.0.0.0";
Reference = "{8B29998D-4A6A-4EA8-82E9-82E2401A9ADF}";

Language = "JScript";

PropertySet "VRayFastSSS2Mtl_pset"
{
	Parameter "out" output
	{
		GUID = "{25BBACD8-6DAD-45F6-A4A2-EAE1B3DB57BD}"; 
		Type = color;
	}
	Parameter "overall_color" input
	{
		GUID = "{F1BFB31B-9F0E-4C73-8CEE-056F71F96E14}";
		Type = color;		
		Value = 1.0 1.0 1.0 1.0;
		Texturable = on;
	}

	Parameter "preset" input
	{
		GUID = "{162FCA70-62A5-428E-95CC-FD7DD58B8638}";
		Type = VT_I4;
		UIType = "Combo";	
		Caps = Persistable;	
		Items
		{
			"Custom" = 0,
			"Skin (brown)" = 1,
			"Skin (pink)" = 2,
			"Skin (yellow)" = 3,
			"Milk (skimmed)" = 4,
			"Milk (whole)" = 5,
			"Marble (white)" = 6,
			"Ketchup" = 7,
			"Cream" = 8,
			"Potato" = 9,
			"Spectralon" = 10
		}
		Value = 0;
	}
	Parameter "prepass_rate" input
	{
		GUID = "{44008C9E-9163-4454-8C98-CFF6D3088DD0}";
		Type = integer;		
		Value = -1;
		Value Minimum = -100;
		Value Maximum = 100;
	}
	Parameter "scale" input
	{
		GUID = "{2FEF5F1F-80BF-4879-BB53-27CDE40ACB85}";
		Type = scalar;		
		Value = 1.0;
		Value Minimum = 0;
		Value Maximum = 10000;
	}
	Parameter "ior" input
	{
		GUID = "{B6E3A39A-3B7E-40DD-B04B-6E942BBD5535}";
		Type = scalar;		
		Value = 1.3;
		Value Minimum = 0;
		Value Maximum = 100;
	}
		
	
	Parameter "diffuse_color" input
	{
		GUID = "{2C8B4640-2524-4FBC-939D-868BB1F7F64D}";
		ui "mapping" = "{3515CC72-082C-11D0-91DE-00A024C78EE3}";
		Type = color;		
		Value = 0.5 0.5 0.5 1.0;
		Texturable = on;
	}
	Parameter "diffuse_amount" input
	{
		GUID = "{22513C6F-E098-4F30-9527-E1DE7ED0C3E2}";
		Type = scalar;		
		Value = 0.0;
		Value Minimum = 0.0;
		Value Maximum = 1.0;
		Texturable = on;
	}
	Parameter "sub_surface_color" input
	{
		GUID = "{86A42FDD-1C8E-4AF2-AAE1-C183CF863B24}";
		Type = color;		
		Value = 0.5 0.5 0.5 1.0;
		Texturable = on;
	}
	Parameter "scatter_color" input
	{
		GUID = "{1C6641F0-88D8-4247-9E78-55A81EF24D8E}";
		Type = color;		
		Value = 0.5 0.5 0.5 1.0;
		Texturable = on;
	}	
	Parameter "scatter_radius" input
	{
		GUID = "{6DE8A1D2-C7A2-4C32-986B-F730B0FFABAF}";
		Type = scalar;		
		Value = 2.0;
		Value Minimum = 0.0;
		Value Maximum = 100.0;
		Texturable = on;
	}	
	Parameter "phase_function" input
	{
		GUID = "{307989A4-5B98-460D-96A2-2AF4D04C2D68}";
		Type = scalar;		
		Value = 0.0;
		Value Minimum = -1.0;
		Value Maximum = 1.0;		
	}
	
	Parameter "specular_color" input
	{
		GUID = "{5A91A633-9353-4109-815A-9BCE0B3D7289}";
		Type = color;		
		Value = 1.0 1.0 1.0 1.0;
		Texturable = on;
	}
	Parameter "specular_amount" input
	{
		GUID = "{3D452F60-CCF5-481B-AFD6-486ED9368C78}";
		Type = scalar;		
		Value = 1.0;
		Value Minimum = 0.0;
		Value Maximum = 1.0;
		Texturable = on;	
	}
	Parameter "specular_glossiness" input
	{
		GUID = "{8E7E7D90-FBA2-49BD-A33D-C39CE71626C9}";
		Type = scalar;		
		Value = 0.6;
		Value Minimum = 0.0;
		Value Maximum = 1.0;
		Texturable = on;	
	}	
	Parameter "specular_subdivs" input
	{
		GUID = "{EA40FF96-2F28-4BC7-831A-CA8C7013B719}";
		Type = integer;		
		Value = 8;
		Value Minimum = 1;
		Value Maximum = 1024;		
	}
	Parameter "specular_reflections" input
	{
		GUID = "{82ADD24F-760F-4429-83E6-6F6599B48816}";
		Type = boolean;		
		Value = on;
	}
	Parameter "specular_trace_depth" input
	{
		GUID = "{15C62D52-4586-4773-9773-2C4DF0E088BA}";
		Type = integer;		
		Value = 5;
		Value Minimum = 1;
		Value Maximum = 100;		
	}
	
	Parameter "single_scatter" input
	{
		GUID = "{DAA80454-FFFC-4823-8702-6DC3F8A48405}";
		Type = VT_I4;
		UIType = "Combo";	
		Caps = Persistable;	
		Items
		{
			"None" = 0,
			"Simple" = 1,
			"Raytraced (solid)" = 2			
			"Raytraced (refractive)" = 3
		}
		Value = 1;
	}
	
	Parameter "scatter_subdivs" input
	{
		GUID = "{A98605B1-A032-4F7B-AACC-479BD7D5EEA7}";
		Type = integer;		
		Value = 8;
		Value Minimum = 1;
		Value Maximum = 1024;
	}
	
	Parameter "refraction_depth" input
	{
		GUID = "{D6232CF8-FCFB-480A-ACA7-CEE3E81A7E52}";
		Type = integer;		
		Value = 5;
		Value Minimum = 0;
		Value Maximum = 1024;		
	}
	
	Parameter "front_scatter" input
	{
		GUID = "{F89665CA-F44D-4F53-A6E6-5F3ED1F92C09}";
		Type = boolean;		
		Value = on;		
	}
	Parameter "back_scatter" input
	{
		GUID = "{B12589F2-14D9-4CBA-9AB8-A8B0972052D3}";
		Type = boolean;		
		Value = on;		
	}
	Parameter "scatter_GI" input
	{
		GUID = "{C94D8A31-41F2-46AC-BB1B-5AB16FC9C81C}";
		Type = boolean;		
		Value = off;		
	}
	Parameter "prepass_LOD_threshold" input
	{
		GUID = "{C4375377-F8AA-4691-88B7-51DA86635129}";
		Type = scalar;		
		Value = 0.01;
		Value Minimum = 0.0;
		Value Maximum = 100000.0;		
	}	
	Parameter "prepass_blur" input
	{
		GUID = "{3A779D88-2609-4150-B9A5-CC4EF8F77647}";
		Type = scalar;		
		Value = 1.2;
		Value Minimum = 0.0;
		Value Maximum = 10.0;
	}
	
	Parameter "use_material_id" input
	{
		GUID = "{19F97F89-7E4C-4B79-8394-414A4454ED2B}";
		Type = boolean;		
		animatable = off;
		Value = off;		
	}
	Parameter "material_id_color" input
	{
		GUID = "{E7E5567A-0196-4297-8DF7-8A8AAEDCC972}";
		Type = color;		
		Value = 0.0 0.0 0.0;
		Texturable = on;
	}
	Parameter "material_id_number" input
	{
		GUID = "{38343EAA-8051-4D89-9F45-8D8FE9742663}";
		Type = integer;
		Value = 0;
		Value Minimum = 0;
		Value Maximum = 100000;
	}
}

MetaShader "VRayFastSSS2Mtl_meta"
{
	Name = "VRayFastSSS2Mtl";
	Type = material, shadow, material photon;
	Renderer "mental ray"
	{
		Name = "VRayFastSSS2Mtl";
		FileName = "VRayFastSSS2Mtl";
		Options
		{
			"version" = 1;
		}
	}
}

Defaults
{
	preset
	{
		Name = "Preset";
	}	
	prepass_rate
	{
		Name = "Prepass rate";
		UIRange = 0.0 to 5.0;
	}
	scale
	{
		Name = "Scale";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
		UIRange = 0.0 to 3.0;
	}
	ior
	{
		Name = "IOR";	
		UIRange = 0.0 to 3.0;		
	}
	overall_color
	{
		Name = "Overall color";
		UIType = "rgb";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
	}
	diffuse_color
	{
		Name = "Diffuse color";
		UIType = "rgb";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
	}
	diffuse_amount
	{
		Name = "Diffuse amount";
	}
	sub_surface_color
	{
		Name = "Subsurface color";
		UIType = "rgb";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
	}
	scatter_color
	{
		Name = "Scatter color";
		UIType = "rgb";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
	}
	scatter_radius
	{
		Name = "Scatter radius";
		UIRange = 0.0 to 4.0;
	}	
	phase_function
	{
		Name = "Phase function";
	}
	
	specular_color
	{
		Name = "Specular color";
		UIType = "rgb";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
	}
	specular_amount
	{
		Name = "Specular amount";
	}
	specular_glossiness
	{
		Name = "Specular glossiness";
	}
	specular_subdivs
	{
		Name = "Specular subdivs";
		UIRange = 0.0 to 32;
	}
	specular_reflections
	{
		Name = "Trace reflections";
	}
	specular_trace_depth
	{
		Name = "Reflection depth";
		UIRange = 0.0 to 16;
	}
	
	single_scatter
	{
		Name = "Single scatter";
	}
	scatter_subdivs
	{
		Name = "Scatter subdivs";
		UIRange = 0.0 to 32;
	}
	refraction_depth
	{
		Name = "Refraction depth";
		UIRange = 0.0 to 16;
	}
	front_scatter
	{
		Name = "Front lighting";
	}
	back_scatter
	{
		Name = "Back lighting";
	}
	scatter_GI
	{
		Name = "Scatter GI";
	}
	prepass_LOD_threshold
	{
		Name = "Cutoff threshold";
		UIRange = 0.0 to 0.05;
	}
	prepass_blur
	{
		Name = "Prepass blur";
		UIRange = 0.0 to 10;
	}	
	
	use_material_id
	{
		Name = "Use Material ID";
	}
	material_id_color
	{
		Name = "Material ID";
		UIType = "rgb";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
	}
	material_id_number
	{
		Name = "Multimatte ID";
		UIRange = 0 to 15;
	}
}

Layout "Default"
{
	Tab "General"
	{
		preset;
		prepass_rate;
		scale;
		ior;
	}
	Tab "Diffuse and SSS layers"
	{
		overall_color;
		diffuse_color;
		diffuse_amount;
		sub_surface_color;
		scatter_color;
		scatter_radius;		
		phase_function;
	}
	Tab "Specular layer"
	{
		specular_color;
		specular_amount;
		specular_glossiness;
		specular_subdivs;
		specular_reflections;
		specular_trace_depth;		
	}
	Tab "Options"
	{
		Group " "
		{
			single_scatter;
			scatter_subdivs;
			refraction_depth;
			front_scatter;
			back_scatter;
			scatter_GI;
			prepass_LOD_threshold;
			prepass_blur;
		}
		
		Group "Material ID"
		{
			use_material_id;
			material_id_color;
			material_id_number;
		}
	}
}

BeginScript
{
	function use_material_id_OnChanged()
	{
		material_id_color.Enable(use_material_id.Value);
		material_id_number.Enable(use_material_id.Value);
	}
	
	function OnInit()
	{
		use_material_id_OnChanged();
	}
	
	function preset_OnChanged()
	{	
		//logmessage( " OnChanged entered", siWarning ) ;
		var mtlShaders = PPG.Inspected;
		for (var idx = 0; idx < mtlShaders.Count; idx++)
		{
			var matShader = mtlShaders.Item(idx);
			RemoveAllShadersFromCnxPoint( matShader.overall_color, siShaderCnxPointAll);
			RemoveAllShadersFromCnxPoint( matShader.diffuse_color, siShaderCnxPointAll);
			RemoveAllShadersFromCnxPoint( matShader.sub_surface_color, siShaderCnxPointAll);
			RemoveAllShadersFromCnxPoint( matShader.scatter_color, siShaderCnxPointAll);
			RemoveAllShadersFromCnxPoint( matShader.specular_color, siShaderCnxPointAll);		

			if (preset == 1)//skin brown
			{			
				matShader.ior	= 1.3;
				matShader.diffuse_amount = 0.0;
				matShader.scatter_radius = 1.0;
				matShader.phase_function = 0.8;
				matShader.specular_amount = 1.0;
				matShader.specular_glossiness = 0.5;			
				
				matShader.overall_color.Red = 1.0;
				matShader.overall_color.Green = 1.0;
				matShader.overall_color.Blue = 1.0;			
								
				matShader.diffuse_color.Red = 0.44;
				matShader.diffuse_color.Green = 0.23;
				matShader.diffuse_color.Blue = 0.13;
								
				matShader.sub_surface_color.Red = 0.44;
				matShader.sub_surface_color.Green = 0.23;
				matShader.sub_surface_color.Blue = 0.13;
								
				matShader.scatter_color.Red = 0.37;
				matShader.scatter_color.Green = 0.14;
				matShader.scatter_color.Blue = 0.06;
								
				matShader.specular_color.Red = 1.0;
				matShader.specular_color.Green = 1.0;
				matShader.specular_color.Blue = 1.0;
			}
			else if(preset == 2)//skin pink
			{
				matShader.ior	= 1.3;
				matShader.diffuse_amount = 0.0;
				matShader.scatter_radius = 1.0;
				matShader.phase_function = 0.8;
				matShader.specular_amount = 1.0;
				matShader.specular_glossiness = 0.5;
				
				matShader.overall_color.Red = 1.0;
				matShader.overall_color.Green = 1.0;
				matShader.overall_color.Blue = 1.0;
								
				matShader.diffuse_color.Red = 0.63;
				matShader.diffuse_color.Green = 0.44;
				matShader.diffuse_color.Blue = 0.34;
								
				matShader.sub_surface_color.Red = 0.63;
				matShader.sub_surface_color.Green = 0.44;
				matShader.sub_surface_color.Blue = 0.34;
								
				matShader.scatter_color.Red = 0.48;
				matShader.scatter_color.Green = 0.17;
				matShader.scatter_color.Blue = 0.1;
								
				matShader.specular_color.Red = 1.0;
				matShader.specular_color.Green = 1.0;
				matShader.specular_color.Blue = 1.0;			
			}	
			else if(preset == 3)//skin yellow
			{
				matShader.ior	= 1.3;
				matShader.diffuse_amount = 0.0;
				matShader.scatter_radius = 1.0;
				matShader.phase_function = 0.8;
				matShader.specular_amount = 1.0;
				matShader.specular_glossiness = 0.5;
				
				matShader.overall_color.Red = 1.0;
				matShader.overall_color.Green = 1.0;
				matShader.overall_color.Blue = 1.0;
								
				matShader.diffuse_color.Red = 0.64;
				matShader.diffuse_color.Green = 0.42;
				matShader.diffuse_color.Blue = 0.27;
								
				matShader.sub_surface_color.Red = 0.64;
				matShader.sub_surface_color.Green = 0.42;
				matShader.sub_surface_color.Blue = 0.27;
								
				matShader.scatter_color.Red = 0.48;
				matShader.scatter_color.Green = 0.17;
				matShader.scatter_color.Blue = 0.1;
								
				matShader.specular_color.Red = 1.0;
				matShader.specular_color.Green = 1.0;
				matShader.specular_color.Blue = 1.0;			
			}	
			else if(preset == 4)//milk skimmed
			{
				matShader.ior	= 1.3;
				matShader.diffuse_amount = 0.0;
				matShader.scatter_radius = 2.0;
				matShader.phase_function = 0.8;
				matShader.specular_amount = 1.0;
				matShader.specular_glossiness = 0.8;
				
				matShader.overall_color.Red = 1.0;
				matShader.overall_color.Green = 1.0;
				matShader.overall_color.Blue = 1.0;
								
				matShader.diffuse_color.Red = 0.81;
				matShader.diffuse_color.Green = 0.81;
				matShader.diffuse_color.Blue = 0.68;
								
				matShader.sub_surface_color.Red = 0.81;
				matShader.sub_surface_color.Green = 0.81;
				matShader.sub_surface_color.Blue = 0.68;
								
				matShader.scatter_color.Red = 0.92;
				matShader.scatter_color.Green = 0.52;
				matShader.scatter_color.Blue = 0.18;
								
				matShader.specular_color.Red = 1.0;
				matShader.specular_color.Green = 1.0;
				matShader.specular_color.Blue = 1.0;			
			}	
			else if(preset == 5)//milk whole
			{
				matShader.ior	= 1.3;
				matShader.diffuse_amount = 0.0;
				matShader.scatter_radius = 2.0;
				matShader.phase_function = 0.9;
				matShader.specular_amount = 1.0;
				matShader.specular_glossiness = 0.8;
				
				matShader.overall_color.Red = 1.0;
				matShader.overall_color.Green = 1.0;
				matShader.overall_color.Blue = 1.0;
								
				matShader.diffuse_color.Red = 0.9;
				matShader.diffuse_color.Green = 0.88;
				matShader.diffuse_color.Blue = 0.76;
								
				matShader.sub_surface_color.Red = 0.9;
				matShader.sub_surface_color.Green = 0.88;
				matShader.sub_surface_color.Blue = 0.76;
								
				matShader.scatter_color.Red = 0.54;
				matShader.scatter_color.Green = 0.33;
				matShader.scatter_color.Blue = 0.12;
								
				matShader.specular_color.Red = 1.0;
				matShader.specular_color.Green = 1.0;
				matShader.specular_color.Blue = 1.0;			
			}	
			else if(preset == 6)//marble
			{
				matShader.ior	= 1.5;
				matShader.diffuse_amount = 0.0;
				matShader.scatter_radius = 1.0;
				matShader.phase_function = -0.25;
				matShader.specular_amount = 1.0;
				matShader.specular_glossiness = 0.7;
				
				matShader.overall_color.Red = 1.0;
				matShader.overall_color.Green = 1.0;
				matShader.overall_color.Blue = 1.0;
								
				matShader.diffuse_color.Red = 0.87;
				matShader.diffuse_color.Green = 0.83;
				matShader.diffuse_color.Blue = 0.8;
								
				matShader.sub_surface_color.Red = 0.87;
				matShader.sub_surface_color.Green = 0.83;
				matShader.sub_surface_color.Blue = 0.8;
								
				matShader.scatter_color.Red = 0.85;
				matShader.scatter_color.Green = 0.56;
				matShader.scatter_color.Blue = 0.4;
								
				matShader.specular_color.Red = 1.0;
				matShader.specular_color.Green = 1.0;
				matShader.specular_color.Blue = 1.0;			
			}	
			else if(preset == 7)//ketchup
			{
				matShader.ior	= 1.3;
				matShader.diffuse_amount = 0.0;
				matShader.scatter_radius = 1.0;
				matShader.phase_function = 0.9;
				matShader.specular_amount = 1.0;
				matShader.specular_glossiness = 0.7;
				
				matShader.overall_color.Red = 1.0;
				matShader.overall_color.Green = 1.0;
				matShader.overall_color.Blue = 1.0;
								
				matShader.diffuse_color.Red = 0.16;
				matShader.diffuse_color.Green = 0.01;
				matShader.diffuse_color.Blue = 0.0;
								
				matShader.sub_surface_color.Red = 0.16;
				matShader.sub_surface_color.Green = 0.01;
				matShader.sub_surface_color.Blue = 0.0;
								
				matShader.scatter_color.Red = 0.47;
				matShader.scatter_color.Green = 0.06;
				matShader.scatter_color.Blue = 0.04;
								
				matShader.specular_color.Red = 1.0;
				matShader.specular_color.Green = 1.0;
				matShader.specular_color.Blue = 1.0;			
			}	
			else if(preset == 8)//cream
			{
				matShader.ior	= 1.3;
				matShader.diffuse_amount = 0.0;
				matShader.scatter_radius = 2.0;
				matShader.phase_function = 0.8;
				matShader.specular_amount = 1.0;
				matShader.specular_glossiness = 0.6;
				
				matShader.overall_color.Red = 1.0;
				matShader.overall_color.Green = 1.0;
				matShader.overall_color.Blue = 1.0;
								
				matShader.diffuse_color.Red = 0.98;
				matShader.diffuse_color.Green = 0.9;
				matShader.diffuse_color.Blue = 0.73;
								
				matShader.sub_surface_color.Red = 0.98;
				matShader.sub_surface_color.Green = 0.9;
				matShader.sub_surface_color.Blue = 0.73;
								
				matShader.scatter_color.Red = 0.75;
				matShader.scatter_color.Green = 0.23;
				matShader.scatter_color.Blue = 0.12;
								
				matShader.specular_color.Red = 1.0;
				matShader.specular_color.Green = 1.0;
				matShader.specular_color.Blue = 1.0;			
			}	
			else if(preset == 9)//Potato
			{
				matShader.ior	= 1.3;
				matShader.diffuse_amount = 0.0;
				matShader.scatter_radius = 2.0;
				matShader.phase_function = 0.8;
				matShader.specular_amount = 1.0;
				matShader.specular_glossiness = 0.5;
				
				matShader.overall_color.Red = 1.0;
				matShader.overall_color.Green = 1.0;
				matShader.overall_color.Blue = 1.0;
								
				matShader.diffuse_color.Red = 0.77;
				matShader.diffuse_color.Green = 0.62;
				matShader.diffuse_color.Blue = 0.21;
								
				matShader.sub_surface_color.Red = 0.77;
				matShader.sub_surface_color.Green = 0.62;
				matShader.sub_surface_color.Blue = 0.21;
								
				matShader.scatter_color.Red = 0.71;
				matShader.scatter_color.Green = 0.36;
				matShader.scatter_color.Blue = 0.1;
								
				matShader.specular_color.Red = 1.0;
				matShader.specular_color.Green = 1.0;
				matShader.specular_color.Blue = 1.0;			
			}	
			else if(preset == 10)//Spectralon
			{
				matShader.ior	= 1.5;
				matShader.diffuse_amount = 1.0;
				matShader.scatter_radius = 0.0;
				matShader.phase_function = 0.0;
				matShader.specular_amount = 0.0;
				matShader.specular_glossiness = 0.0;
				
				matShader.overall_color.Red = 1.0;
				matShader.overall_color.Green = 1.0;
				matShader.overall_color.Blue = 1.0;
								
				matShader.diffuse_color.Red = 1.0;
				matShader.diffuse_color.Green = 1.0;
				matShader.diffuse_color.Blue = 1.0;
								
				matShader.sub_surface_color.Red = 1.0;
				matShader.sub_surface_color.Green = 1.0;
				matShader.sub_surface_color.Blue = 1.0;
								
				matShader.scatter_color.Red = 0.0;
				matShader.scatter_color.Green = 0.0;
				matShader.scatter_color.Blue = 0.0;
								
				matShader.specular_color.Red = 1.0;
				matShader.specular_color.Green = 1.0;
				matShader.specular_color.Blue = 1.0;			
			}	
		}
		PPG.Refresh();
	}		
}
EndScript
	


Plugin = Shader
{
	FileName = "VRayFastSSS2Mtl";
}

HelpFile = "http://www.spot3d.com/vray/help/softimage/150R1/vrayfastsss2.htm";
