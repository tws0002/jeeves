# SPDL Generated by XSI Shader Wizard
SPDL
Version = "2.0.0.0";
Reference = "{5B04505A-22DF-45C9-8566-2B196513BB2F}";
PropertySet "VRayLight_pset"
{
	Parameter "out" output
	{
		GUID = "{0C876DCD-0D60-40EA-BD77-86CB266E9CD4}";
		Type = color;
	}
	Parameter "m_bOn" input
	{
		GUID = "{745F6F9B-B91D-420A-84EA-1ECD17F42C6A}";
		Type = boolean;
		Value = on;
	}
	Parameter "m_uType" input
	{
		GUID = "{97C28DD1-447E-4B7A-ADC9-EEA2CACCEBDE}";
		Type = integer;
		Value Maximum = 2;
		texturable = off ;
		animatable = off ;
	}
	Parameter "m_uUnits" input
	{
		GUID = "{61E6F81F-DD92-4A25-950D-EA383696151F}";
		Type = integer;
		Value Maximum = 5;
		texturable = off ;
		animatable = off ;
	}
	Parameter "m_uColorMode" input
	{
		GUID = "{1293365B-51E7-4C61-B9B5-F76A08AD75F9}";
		Type = integer;
		Value Maximum = 1;
		Value = 0;
		texturable = off ;
		animatable = off ;
	}
	Parameter "m_clrColor" input
	{
		GUID = "{BABF033D-BF03-4BD9-AF90-827F7EED8C90}";
		Type = color;
		Value = 1.0 1.0 1.0;
	}
	Parameter "m_clrTexturable" input
	{
		GUID = "{C197A19A-3306-494A-87D3-409AC51C04D1}";
		Type = color;
		Value = 1.0 1.0 1.0 1.0;
		texturable = on;
	}
	Parameter "m_fTemperature" input
	{
		GUID = "{98D4EB41-5DAE-45C8-97D9-9EE74CDC9E03}";
		Type = scalar;
		Value = 6500.0;
		Value Minimum = 0.0;
		Value Maximum = 30000.0;
	}
	Parameter "m_fMultiplier" input
	{
		GUID = "{03AE4062-ADD7-4D15-BF3A-E34AFA65C6AC}";
		Type = VT_R4;
		Range = 0.0 To Max;
		UIRange = 0.0 to 100.0;
		Value = 30.0;
	}
	Parameter "m_fUsize" input
	{
		GUID = "{51F796B3-6B62-4120-8603-1E1B6C939E02}";
		Type = scalar;
		Value = 10.0;
	}
	Parameter "m_fVsize" input
	{
		GUID = "{A24D1767-7CBA-42FD-B055-9681DEB495EF}";
		Type = scalar;
		Value = 10.0;
	}
	Parameter "m_fcutoffThreshold" input
	{
		GUID = "{4DFF8EEF-AF96-4CB8-9E29-4B99FA61B1A6}";
		Type = scalar;
		Value = 0.001;
	}
	Parameter "m_bDoubleSided" input
	{
		GUID = "{37A88FAD-AEED-46F2-BA69-DC5703703414}";
		Type = boolean;
		Value = off;
	}
	Parameter "m_bInvisible" input
	{
		GUID = "{3447A757-0BF9-4975-862C-F3BF868FCB16}";
		Type = boolean;
		Value = off;
	}
	Parameter "m_bIgnoreLightNormals" input
	{
		GUID = "{49BDB8BF-EC24-4119-8A32-9D61540F85F6}";
		Type = boolean;
		Value = on;
	}
	Parameter "m_bNoDecay" input
	{
		GUID = "{506B1837-1931-4D63-9201-56D33BC49EB4}";
		Type = boolean;
		Value = off;
	}
	Parameter "m_bSkylightPortal" input
	{
		GUID = "{1804992C-4279-4276-A001-8CF5E2D2FDBC}";
		Type = boolean;
		Value = off;
	}
	Parameter "m_bSimpleSkylightPortal" input
	{
		GUID = "{2CE2DCDE-C597-4387-A996-F4BA5B36A0E1}";
		Type = boolean;
		Value = off;
	}
	Parameter "m_bStoreWithIM" input
	{
		GUID = "{26F084C3-8632-46DA-9BEA-61184A0B725A}";
		Type = boolean;
		Value = off;
	}
	Parameter "m_bShadows" input
	{
		GUID = "{6F5579AE-FE5A-407A-897E-38F544DDF4FA}";
		Type = boolean;
		Value = on;
	}
	Parameter "m_uPhotonSubdivs" input
	{
		GUID = "{A7D31D89-7C76-4FFF-8AF9-32F1CAD85B91}";
		Type = integer;
		Value Minimum = 1;
		Value Maximum = 30000;
		Value = 500;
	}
	Parameter "m_uCausticsSubdivs" input
	{
		GUID = "{A13F4D0A-07A4-4C0D-A8E5-3B638A5BEB27}";
		Type = integer;
		Value Minimum = 1;
		Value Maximum = 10000;
		Value = 1000;
	}	
	Parameter "m_uSubdivs" input
	{
		GUID = "{F13BFF6A-2E02-48E0-818B-54D500301394}";
		Type = integer;
		Value Minimum = 1;
		Value Maximum = 1000;
		Value = 8;
	}
	Parameter "m_fShadowBias" input
	{
		GUID = "{51DB66AE-B95A-4835-B23F-2644CD1942D1}";
		Type = scalar;
		Value = 0.02;
		Value Minimum = 0.0;
		Value Maximum = 100.0;
		
	}
	Parameter "m_bUseTexture" input
	{
		GUID = "{52566E65-E7EB-4601-930E-C0D7B207CA14}";
		Type = boolean;
		Value = on;
	}	
	Parameter "m_bTexAdaptive" input
	{
		GUID = "{F1E66DBE-BCBA-43AC-9B22-7B81E06D005A}";
		Type = boolean;
		Value = on;
		Animatable = off;
	}
	Parameter "m_clrTexture" input
	{
		GUID = "{10582328-3FC1-4AD3-B4FD-517033CC274E}";
		Type = color;
		Texturable = on;
		Value = 1.0 1.0 1.0 1.0;
	}
	Parameter "m_iResolution" input
	{
		GUID = "{541D91F3-043F-4B3F-94EB-C983D9A6251C}";
		Type = integer;
		Value = 512;
		Value Minimum = 1;
		Value Maximum = 2048;
	}
	Parameter "m_fTargetRadius" input
	{
		GUID = "{ECDAC75A-F179-408E-9969-71F4C03A1F0B}";
		Type = scalar;
		Value = 100.0;
		Value Minimum = 0.0001;
	}
	Parameter "m_fEmitRadius" input
	{
		GUID = "{DB449EFF-D28D-4BFA-BC11-0B6B73A8ACCD}";
		Type = scalar;
		Value = 150.0;
		Value Minimum = 0.0001;
	}
	Parameter "m_bSpherical" input
	{
		GUID = "{EA892E2C-4E2F-43A4-8AA4-2C77AA6FFE7A}";
		Type = boolean;
		Value = off;
	}
	Parameter "m_fRadius" input
	{
		GUID = "{939C3A57-0FF0-4A64-8345-BA3CE3925CA4}";
		Type = scalar;
		Value = 1;
		Value Minimum = 0.0001;
	}
	Parameter "m_fHalfWidth" input
	{
		GUID = "{C1C81D24-C942-4B6F-A3DE-F490D34FA45B}";
		Type = scalar;
		Value = 2.0;
		Value Minimum = 0.0001;
	}
	Parameter "m_fHalfHeight" input
	{
		GUID = "{227B60CC-DB19-4C97-ADEF-B1AB94B31D4A}";
		Type = scalar;
		Value = 2.0;
		Value Minimum = 0.0001;
	}
	Parameter "m_fInitExec" input
	{
		GUID = "{493EDF9E-C3E2-4CFA-B1D8-FB0D50D01895}";
		Type = integer;
		Value Maximum = 1;
		Value = 0;
	}
	Parameter "m_clrShadowColor" input
	{
		GUID = "{FA5648AE-C2C8-4E09-9CE1-88342A883D63}";
		Type = color;
		Value = 0.0 0.0 0.0;
	}
	Parameter "m_uPrevType" input
	{
		GUID = "{A07E892C-FAD1-41EF-B03E-59014F7EBA56}";
		Type = integer;
		Value Maximum = 2;
	}
	Parameter "m_bAffectDiffuse" input
	{
		GUID = "{4A8BAA80-034F-4212-A233-982BB9B0C4C6}";
		Type = boolean;
		Value = on;
	}
	Parameter "m_bAffectSpecular" input
	{
		GUID = "{A5A6898A-D043-46D8-91D6-332BDBDDFBC1}";
		Type = boolean;
		Value = on;
	}
	Parameter "m_bAffectReflections" input
	{
		GUID = "{295DC4DF-7BD2-4B22-A026-21A110D0C353}";
		Type = boolean;
		Value = on;
	}
	Parameter "m_bDomeRayDistanceOn" input
	{	
		GUID = "{70022337-6113-452F-BAB3-862EC8320007}";
		Type = boolean;
		Value = off;
		
	}
	Parameter "m_uDomeRayDistanceMode" input
	{
		GUID = "{4F5E83D9-2D96-4684-8564-4086A1917674}";
		Type = integer;
		Value Maximum = 2;
		Value = 0;
		texturable = off ;
		animatable = off ;
	}
	Parameter "m_fDomeRayDistance" input
	{
		GUID = "{0BBA4468-95A3-4B07-A74B-243EEDED4259}";
		Type = scalar;
		Value = 100000.0;
		Value Minimum = 0.0;
		Value Maximum = 1000000000;	
	}
	Parameter "m_fDiffuseContrib" input
	{
		GUID = "{7FDC4415-3B42-46FC-B9A4-E510F4475061}";
		Type = scalar;
		Value = 1.0;
	}
	Parameter "m_fSpecularContrib" input
	{
		GUID = "{C9BCCC4C-61E6-4744-AB42-2E661C6D1F3A}";
		Type = scalar;
		Value = 1.0;
	}
	Parameter "m_fDiffuseMult" input
	{
		GUID = "{B72A5D63-A064-4029-BBB7-F5C49CEF4453}";
		Type = scalar;
		Value = 1.0;
	}
	Parameter "m_fCausticMult" input
	{
		GUID = "{AFE80339-5B58-49F1-AEFD-F2030E784849}";
		Type = scalar;
		Value = 1.0;
	}
	Parameter "m_bOverrideMBSamples" input
	{
		GUID = "{6FAFCE5D-16B5-4EDF-B833-52B25A4199EB}";
		Type = boolean;
		Value = off;
	}
	Parameter "m_uMBSamples" input
	{
		GUID = "{4B78CB45-6288-43D1-867C-FFBBDF3CFE59}";
		Type = integer;
		Value = 2;
		Value Minimum = 0;
		Value Maximum = 128;		
	}
	Parameter "m_uSphereSegments" input
	{
		GUID = "{0BB643C4-CEF1-40B8-8D9E-55C570BC9848}";
		Type = integer;
		Value = 20;
		Value Minimum = 3;
	}
	Parameter "m_bRectTexAdaptive" input
	{
		GUID = "{42188317-6E99-4C03-B355-AAAEBBEE4231}";
		Type = boolean;
		Value = on;
		Animatable = off;
	}
	Parameter "m_iRectResolution" input
	{
		GUID = "{60F227AE-8856-4068-89DA-F217B9F8F403}";
		Type = integer;
		Value = 512;
		Value Minimum = 1;
		UI Minimum = 64;
		Value Maximum = 2048;
	}
}
MetaShader "VRayLight_declare"
{
	Name = "VRayLight";
	Type = light, light photon;
	Renderer "mental ray"
	{
		Name = "VRayLight";
		Options
		{
			"version" = 1;
		}
	}
	Renderer "V-Ray"
	{
		Name = "VRayLight";
		Options
		{
			"version" = 1;
		}
	}
}
#--- Dome Light 1
#--- Rectangle Light 0	
#---Sphere Light	2
Logic 
{	
	Sub m_uColorMode_OnChanged()
		if m_uColorMode = 0 Then
			m_fTemperature.Enable(FALSE)
			If m_bSkylightPortal.Value = false Then
				m_clrColor.Enable(TRUE)
				m_clrTexturable.Enable(TRUE)
			Else
				m_clrColor.Enable(FALSE)	
				m_clrTexturable.Enable(FALSE)
			End If
		Else
			m_fTemperature.Enable(TRUE)
			m_clrColor.Enable(FALSE)	
			m_clrTexturable.Enable(FALSE)
		End If 
		
		PPG.Refresh()
	End Sub
	
	Sub m_fTemperature_OnChanged()
		for each vrlshader in PPG.Inspected
			If vrlshader.m_uType.Value = 0 Then
				vrlshader.m_clrTexturable.Enable(TRUE)			
				GetColorFromTemperature vrlshader.Parent.Parent, vrlshader.m_fTemperature.Value, vrlshader.m_clrTexturable
				vrlshader.m_clrTexturable.Enable(FALSE)
			Else
				vrlshader.m_clrColor.Enable(TRUE)			
				GetColorFromTemperature vrlshader.Parent.Parent, vrlshader.m_fTemperature.Value, vrlshader.m_clrColor
				vrlshader.m_clrColor.Enable(FALSE)
			 End If	
		next 
		PPG.Refresh()	
	End Sub
	
	Sub m_uType_OnChanged()
		for each vrlShader in PPG.Inspected
			if vrlShader.m_uPrevType.Value = 0 Then
				vrlShader.m_fHalfWidth.Value = vrlShader.Parent.LightAreaXformSX.Value
				vrlShader.m_fHalfHeight.Value = vrlShader.Parent.LightAreaXformSY.Value
			ElseIf vrlShader.m_uPrevType.Value = 1 Then
				vrlShader.m_fTargetRadius.Value = vrlShader.Parent.LightAreaXformSX.Value
				'Rotate the light back to its non-dome-like orientation. See the case where dome light is chosen.
				set obj = vrlShader.Parent.Parent 'Get the current object
				rotX = obj.LocalRotation.RotX
				rotY = obj.LocalRotation.RotY
				rotZ = obj.LocalRotation.RotZ
				If ( Abs( -90 - rotX) < 0.00001 And Abs(rotY) < 0.00001 And Abs(rotZ) < 0.00001 ) Then			
					Rotate obj, 90
				End If
			Else
				vrlShader.m_fRadius.Value = vrlShader.Parent.LightAreaXformSX.Value
			End If
			vrlShader.m_uPrevType.Value = vrlShader.m_uType.Value		
			vrlShader.Parent.LightAreaXformSX.Enable(TRUE)
			vrlShader.Parent.LightAreaGeom.Enable(TRUE)
		'Dome Light chosen
			If m_uType.Value = 1 Then	
				vrlShader.m_bSkylightPortal.Value = FALSE
				m_bSkylightPortal.Show(FALSE)
				m_uColorMode_OnChanged()
				m_bSimpleSkylightPortal.Show(FALSE)
				m_bRectTexAdaptive.Show(FALSE)
				m_iRectResolution.Show(FALSE)
				m_bOverrideMBSamples.Show(FALSE)
				m_uMBSamples.Show(FALSE)
				m_uSphereSegments.Show(FALSE)
				m_clrTexturable.Show(FALSE)
				m_clrColor.Show(TRUE)
				vrlShader.Parent.Parameters("Type").Value = 1
				'vrlShader.Parent.LightArea.Value = TRUE
				vrlShader.Parent.LightAreaGeom.Value = 2			
				vrlShader.Parent.LightAreaXformSX.Value = vrlShader.m_fTargetRadius.Value
				vrlShader.Parent.LightAreaXformSX.Enable(FALSE)
				m_bUseTexture.Enable(TRUE)
				m_bTexAdaptive.Enable(TRUE)
				m_clrTexture.Enable(TRUE)
				m_iResolution.Enable(TRUE)
				m_fTargetRadius.Enable(TRUE)
				m_fEmitRadius.Enable(TRUE)
				m_bSpherical.Enable(TRUE)
				'm_fVsize.Enable(TRUE)
				m_bIgnoreLightNormals.Enable(FALSE)
				m_uDomeRayDistanceMode.Enable(TRUE)
				m_uDomeRayDistanceMode_OnChanged()
				'Rotate the dome light to point down. This is done only if the light is in its original orientation.
				'If the light is not in the original position, we assume that the user wants a particular orientation.
				set obj = vrlShader.Parent.Parent 'Get the current object
				rotX = obj.LocalRotation.RotX
				rotY = obj.LocalRotation.RotY
				rotZ = obj.LocalRotation.RotZ
				If ( Abs(rotX) < 0.00001 And Abs(rotY) < 0.00001 And Abs(rotZ) < 0.00001 ) Then
					Rotate obj, -90				
				End If			
			Else 			
				m_bUseTexture.Enable(FALSE)
				m_bTexAdaptive.Enable(FALSE)
				m_clrTexture.Enable(FALSE)
				m_iResolution.Enable(FALSE)
				m_fTargetRadius.Enable(FALSE)
				m_fEmitRadius.Enable(FALSE)
				m_bSpherical.Enable(FALSE)
				m_uDomeRayDistanceMode.Enable(FALSE)
				m_fDomeRayDistance.Enable(FALSE)			
			End if				
		'Plane light choosen
			If m_uType.Value = 0 Then
				m_bSkylightPortal.Show(TRUE)
				m_bSimpleSkylightPortal.Show(TRUE)
				m_bSkylightPortal_OnChanged()
				m_bRectTexAdaptive.Show(TRUE)
				m_iRectResolution.Show(TRUE)
				m_bOverrideMBSamples.Show(TRUE)
				m_uMBSamples.Show(TRUE)
				m_uSphereSegments.Show(FALSE)
				m_clrColor.Show(FALSE)
				m_clrTexturable.Show(TRUE)
				vrlShader.Parent.Parameters("Type").Value = 1
				m_bIgnoreLightNormals.Enable(TRUE)			
				vrlShader.Parent.LightArea.Value = TRUE
				vrlShader.Parent.LightAreaGeom.Value = 1
				vrlShader.Parent.LightAreaXformSX.Value = vrlShader.m_fHalfWidth.Value
				vrlShader.Parent.LightAreaXformSY.Value = vrlShader.m_fHalfHeight.Value	
		'Sphere light choosen	
			ElseIf m_uType.Value = 2 Then
				vrlShader.m_bSkylightPortal.Value = FALSE
				m_bSkylightPortal.Show(FALSE)
				m_uColorMode_OnChanged()
				m_bSimpleSkylightPortal.Show(FALSE)
				m_bRectTexAdaptive.Show(FALSE)
				m_iRectResolution.Show(FALSE)
				m_bOverrideMBSamples.Show(TRUE)
				m_uMBSamples.Show(TRUE)
				m_uSphereSegments.Show(TRUE)
				m_clrTexturable.Show(FALSE)
				m_clrColor.Show(TRUE)
				vrlShader.Parent.Parameters("Type").Value = 0		
				m_bIgnoreLightNormals.Enable(FALSE)
				m_fUsize.Show(FALSE)			
				vrlShader.Parent.LightArea.Value = TRUE
				vrlShader.Parent.LightAreaGeom.Value = 3
				vrlShader.Parent.LightAreaXformSX.Value = vrlShader.m_fRadius.Value
			End if	
					
			vrlShader.Parent.LightAreaGeom.Enable(FALSE)
		next
		Refresh()
	End Sub
	
	Sub m_fTargetRadius_OnChanged()
		for each vrLightShader in PPG.Inspected
			vrLightShader.Parent.LightAreaXformSX.Value = vrLightShader.m_fTargetRadius.Value		
		next
	End Sub
	
	Sub m_bSkylightPortal_OnChanged()
		If m_bSkylightPortal.Value = true Then
			m_bSimpleSkylightPortal.Enable(TRUE)
			m_clrTexturable.Enable(FALSE)
			m_clrColor.Enable(FALSE)
		Else
			m_bSimpleSkylightPortal.Enable(FALSE)
			m_uColorMode_OnChanged()
		End If
	End Sub
	
	Sub m_bOverrideMBSamples_OnChanged()
		If m_bOverrideMBSamples.Value = true Then
			m_uMBSamples.Enable(TRUE)
		Else
			m_uMBSamples.Enable(FALSE)
		End If
	End Sub
	
	Sub OnInit()
		Dim vr
		vr = VersionCommand
		
		If vr >= 10000 Then
			Application.OpenUndo("VRay Light")
		End If	
	
		'LogMessage "V-Ray Light Initialization"
		m_fUsize.Parent.Parent.LightAreaGeom.Enable(FALSE)
		'LogMessage "LightAreaGeom - disabled"
		m_fUsize.Parent.Parent.LightAreaXformRX.Value = 0
		'Make Plane light default size larger if needed
		If m_uType.Value = 0 And m_fInitExec.Value = 0 Then
			If m_fUsize.Parent.Parent.LightAreaXformSX.Value < 2 Then
				m_fUsize.Parent.Parent.LightAreaXformSX.Value = 2
			End If
			If m_fUsize.Parent.Parent.LightAreaXformSY.Value < 2 Then
				m_fUsize.Parent.Parent.LightAreaXformSY.Value = 2
			End If
			m_fInitExec.Value = 1
		End If		
		If  TypeName( m_fUsize.Parent.Parent.LightAreaXformSX)  <> "Nothing" Then
			m_uType_OnChanged()	
		End If
		
		m_bOverrideMBSamples_OnChanged()
		m_uColorMode_OnChanged()
		m_bSkylightPortal_OnChanged()
		m_uDomeRayDistanceMode_OnChanged()
		
		If vr >= 10000 Then
			Application.CloseUndo()
		End If	
	End Sub
	
	Sub OnClosed()
		for each vrLightShader in PPG.Inspected
			If  TypeName(vrLightShader.Parent) <> "Nothing" And TypeName(vrLightShader.Parent) <> "XSIApplication" Then
				If vrLightShader.m_uPrevType.Value = 0 Then
					vrLightShader.m_fHalfWidth.Value = vrLightShader.Parent.LightAreaXformSX.Value
					vrLightShader.m_fHalfHeight.Value = vrLightShader.Parent.LightAreaXformSY.Value     
				ElseIf vrLightShader.m_uPrevType.Value = 1 Then
					vrLightShader.m_fTargetRadius.Value = vrLightShader.Parent.LightAreaXformSX.Value 
				Else
					vrLightShader.m_fRadius.Value = vrLightShader.Parent.LightAreaXformSX.Value 
				End If
			End If
		next
	End Sub
	
	Sub m_uDomeRayDistanceMode_OnChanged()
		if m_uDomeRayDistanceMode.Value = 0 Then
			m_fDomeRayDistance.Enable(FALSE)			
		ElseIf m_uDomeRayDistanceMode.Value = 1 Then
			m_fDomeRayDistance.Enable(FALSE)
		Else
			m_fDomeRayDistance.Enable(TRUE)
		End If 
	
	End Sub
}
Defaults
{
	m_bOn
	{
		Name = "On";
	}
	m_uType
	{
		Name = "Type";
		Range = 0 to 2;
		UIType = "Combo";
        Items
        {
           "Plane" = 0
           "Dome" = 1
           "Sphere" = 2
        }
	}
	m_uUnits
	{
		Name = "Units";
		Range = 0 to 4;
		UIType = "Combo";
        Items
        {
           "Default(image)" = 0
           "Lumious power (lm)" = 1
           "Luminance (lm/m^2/sr)" = 2
           "Radiant power (W)" = 3
           "Radiance (W/m^2/sr)" = 4
        }
	}
	m_uColorMode
	{
		Name = "Mode";
		Range = 0 to 1;
		UIType = "Combo";
        Items
        {
           "Color" = 0
           "Temperature" = 1           
        }
	}
	m_clrColor
	{
		Name = "Color";
		UIType = "rgb";
	}
	m_clrTexturable
	{
		Name = "Color";
		UIType = "rgba";
	}
	m_fTemperature
	{
		Name = "Temperature";		
	}
	m_fMultiplier
	{
		Name = "Multiplier";
	}
	m_fUsize
	{
		Name = "U";
	}
	m_fVsize
	{
		Name = "V";
	}
	m_fcutoffThreshold
	{
		Name = "Cut-off threshold";
		UIRange = 0.000 To 0.05;
	}
	m_bDoubleSided
	{
		Name = "Double-sided";
	}
	m_bInvisible
	{
		Name = "Invisible";
	}
	m_bIgnoreLightNormals
	{
		Name = "Ignore light normals";
	}
	m_bNoDecay
	{
		Name = "No decay";
	}
	m_bSkylightPortal
	{
		Name = "Skylight portal";
	}
	m_bSimpleSkylightPortal
	{
		Name = "Simple Skylight portal";
	}
	m_bStoreWithIM
	{
		Name = "Store with irradiance map";
	}
	m_bShadows
	{
		Name = "On";
	}
	m_uPhotonSubdivs
	{
		Name = "Photon subdivs";
		UIRange = 1 To 2000;
	}
	m_uCausticsSubdivs
	{
		Name = "Caustics subdivs";
		UIRange = 1 To 4000;
	}
	m_uSubdivs
	{
		Name = "Subdivs";
		UIRange = 1 To 32;
	}
	m_fShadowBias
	{
		Name = "Shadow Bias";
		UIRange = 0.0 To 5.0 by 0.01;
	}
	m_bUseTexture
	{
		Name = "Use Texture";
	}
	m_bTexAdaptive
	{
		Name = "Adaptive";
	}
	m_clrTexture
	{
		Name = " ";
		UIType = "rgba";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
	}
	m_iResolution
	{
		Name = "Resolution";
		UIRange = 1 To 2048;
	}
	m_fTargetRadius
	{
		Name = "Target radius";
		UIRange = 0.0 To 200.0;
	}
	m_fEmitRadius
	{
		Name = "Emit radius";
		UIRange = 0.0 To 200.0;
	}
	m_bSpherical
	{
		Name = "Spherical (full dome)";
	}
	#---m_fRadius
	#---{
	#---	Name = "Radius";
	#---}
	m_fHalfWidth
	{
		Name = "Half width";
		UIRange = 0.5 to 1000.0 by 0.5;
	}
	m_fHalfHeight
	{
		Name = "Half height";
		UIRange = 0.5 to 1000.0 by 0.5;
	}
	m_clrShadowColor
	{
		Name = "Color";
		UIType = "rgb";
	}
	m_uPrevType
	{
		Name = "Type";
		Range = 0 to 2;		
	}
	m_bAffectDiffuse
	{
		Name = "Affect diffuse";
	}
	m_bAffectSpecular
	{
		Name = "Affect specular";
	}
	m_bAffectReflections
	{
		Name = "Affect reflections";
	}
	m_uDomeRayDistanceMode	
	{
		Name = "Mode:";
		Range = 0 to 2;
		UIType = "Combo";
        Items
        {
           "None" = 0
           "From GI settings" = 1
           "Explicit" = 2
        }
	}
	m_fDomeRayDistance
	{
		Name = "Ray Dist:";
	}
	m_fDiffuseContrib
	{
		Name = "Diffuse contribution";
		UIRange = 0.0 To 10.0;
	}
	m_fSpecularContrib
	{
		Name = "Specular contribution";
		UIRange = 0.0 To 10.0;
	}
	m_fDiffuseMult
	{
		Name =  "Diffuse multiplier";
		UIRange = 0.0 To 10.0;
	}
	m_fCausticMult
	{
		Name = "Caustics multiplier";
		UIRange = 0.0 To 10.0;
	}
	m_bOverrideMBSamples
	{
		Name = "Override motion blur samples";
	}
	m_uMBSamples
	{
		Name = "Motion blur samples";
		UIRange = 0 To 16;
	}
	m_uSphereSegments
	{
		Name = "Sphere segments";
		UIRange = 3 To 64;
	}
	m_bRectTexAdaptive
	{
		Name = "Tex Adaptive";
	}
	m_iRectResolution
	{
		Name = "Texture resolution";
	}
}

Layout "Default"
{
	Tab "General"
	{
		Row
		{
			m_bOn, 25%, AlignRight, LabelWidth(50%,10);
			m_uType, 75%;
		}
		Group "Intensity"
		{
			m_uUnits;
			m_uColorMode;
			m_clrColor;
			m_clrTexturable;
			m_fTemperature;
			m_fMultiplier;
			m_bRectTexAdaptive;
			m_iRectResolution;
			m_uSphereSegments;			
		}
		#---Group "Size"
		#---{	
		#---	Row
		#---	{		
		#---		m_fRadius, LabelWidth(10%,10);
		#---		m_fUsize, LabelWidth(10%,10);
		#---		m_fHalfWidth, LabelWidth(10%,10);			
		#---		m_fHalfHeight, LabelWidth(10%,10);			
		#---		m_fVsize, LabelWidth(10%,10);
		#---	}		
		#---}
		Group "Shadows"
		{
			Row
			{
				m_bShadows, 25%, AlignRight, LabelWidth(50%,10);
				m_fShadowBias, 75%;
			}
			m_clrShadowColor;			
		}	
	}
	Tab "Sampling"
	{
		
		m_uSubdivs, LabelWidth(50%,50);
		m_uPhotonSubdivs, LabelWidth(50%,50);	
		m_fDiffuseMult, LabelWidth(50%,50);
		m_uCausticsSubdivs, LabelWidth(50%,50);	
		m_fCausticMult, LabelWidth(50%,50);
		m_bOverrideMBSamples, LabelWidth(50%,50);
		m_uMBSamples, LabelWidth(50%,50);
	
	}	
	Tab "Options"
	{

		m_bDoubleSided;
		m_bInvisible;
		m_bIgnoreLightNormals;
		m_bNoDecay;
		m_bSkylightPortal;
		m_bSimpleSkylightPortal;
		m_bStoreWithIM;
		m_bAffectDiffuse;
		m_bAffectSpecular;
		m_bAffectReflections;
		m_fDiffuseContrib;
		m_fSpecularContrib;
		m_fcutoffThreshold, LabelWidth(50%,50);			

	}
	Tab "Dome Light Options"
	{
		m_bSpherical;
		Group "Ray distance"
		{
			Row
			{
				m_uDomeRayDistanceMode;
				m_fDomeRayDistance;
			}
		}	
		Group "Texture"
		{
			m_bUseTexture;
			m_bTexAdaptive;
			m_clrTexture, LabelWidth(40%,50);	
			m_iResolution, LabelWidth(40%,50);	
		}
		Group "Photon emisssion"
		{
			m_fTargetRadius, LabelWidth(40%,50);	
			m_fEmitRadius, LabelWidth(40%,50);	
		}		
	}
}

Plugin = Shader
{
	FileName = "VRayLight";
}

HelpFile = "http://www.spot3d.com/vray/help/softimage/150R1/light_params.htm";