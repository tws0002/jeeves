# SPDL Generated by Softimage Shader Wizard
SPDL
Version = "2.0.0.0";
Reference = "{20406B17-0FB2-4966-AE9E-663A6002E74D}";

Language = "JScript";

PropertySet "VRayEnvFog_pset"
{
	Parameter "out" output
	{
		GUID = "{36517E80-B896-400A-B071-FD4FB1D931A9}";
		Type = color;
	}
	Parameter "emission" input
	{
		GUID = "{16CA26F8-F928-4195-BEFB-ACF29FC1E4E5}";
		Type = color;
		Texturable = on;
		Value = 0.0 0.0 0.0;
	}
	Parameter "color" input
	{
		GUID = "{E61822CB-0413-4A4F-8281-9ABD5A6B26E5}";
		Type = color;
		Texturable = on;
		Value = 0.85 0.85 0.85;
	}
	Parameter "emission_mult" input
	{
		GUID = "{CD430CAE-24E8-49FC-84CA-55EDB0FEC62F}";
		Type = scalar;
		Texturable = on;
		Value = 1.0;
		Value Minimum = 0.0;
	}
	Parameter "distance" input
	{
		GUID = "{AC180AAE-E50A-4F4F-ACED-7BB8C5BB732E}";
		Type = scalar;
		Value = 10.0;
		Value Minimum = 0.0;
		Value Maximum = 100000.0;
	}
	Parameter "density" input
	{
		GUID = "{843F76CD-6B6D-44B8-A458-B5521312C621}";
		Type = scalar;
		Texturable = on;
		Value = 1.0;
		Value Minimum = 0.0;
		Value Maximum = 1.0;
	}
	Parameter "height" input
	{
		GUID = "{D137B741-CD31-4EE0-814E-24F81D6632F6}";
		Type = scalar;
		Value = 100.0;
		Value Minimum = 0.0;
		Value Maximum = 1000000.0;
	}
	Parameter "subdivs" input
	{
		GUID = "{DF7E4A66-0D3A-4224-A6E2-C98710A3DDE2}";
		Type = integer;
		Value = 8;
		Value Minimum = 0;
		Value Maximum = 4096;
	}
	Parameter "scatter_gi" input
	{
		GUID = "{D7DD84E2-68A8-4FE0-9F98-DC084DC76EAD}";
		Type = boolean;
		Value = off;
	}
	Parameter "scatter_bounces" input
	{
		GUID = "{03E209B4-898F-45EF-9E06-D9A528ECED1E}";
		Type = integer;
		Value = 1;
		Value Minimum = 0;
		Value Maximum = 1000;
	}
	Parameter "simplify_gi" input
	{
		GUID = "{5C9E7D09-862A-49DA-A072-54C97A08B4BD}";
		Type = boolean;
		Value = off;
	}
	Parameter "step_size" input
	{
		GUID = "{CB81A152-1C71-4488-A1B4-580EC99C13AB}";
		Type = scalar;
		Value = 1.0;
		Value Minimum = 0.000001;
		Value Maximum = 100000.0;
	}
	Parameter "max_steps" input
	{
		GUID = "{3AEB587B-5457-4D75-B105-765CC8890413}";
		Type = scalar;
		Value = 1000.0;
		Value Minimum = 0.0;
		Value Maximum = 100000.0;
	}
	Parameter "tex_samples" input
	{
		GUID = "{2A8AFF74-164D-4F8C-AC38-0D44AC98CC4D}";
		Type = integer;
		Value = 4;
		Value Minimum = 1;
		Value Maximum = 100000;
	}
	Parameter "cutoff_threshold" input
	{
		GUID = "{088F311C-E9E0-4247-98C5-09BB571A5847}";
		Type = scalar;
		Value = 0.001;
		Value Minimum = 0.0;
		Value Maximum = 1.0;
	}
	Parameter "fade_out_mode" input
	{
		GUID = "{D56680AA-7047-48BA-972C-D4A404A9602C}";
		Type = integer;
	}
	Parameter "fade_out_radius" input
	{
		GUID = "{4380F0D7-665E-465A-BE31-3D6B550BBCDF}";
		Type = scalar;
		Value = 0.0;
		Value Minimum = 0.0;
		Value Maximum = 1000000.0;
	}
	Parameter "per_object_fade_out_radius" input
	{
		GUID = "{04BAAC35-BBEE-4955-970A-1CEB2F9664D9}";
		Type = boolean;
		Value = off;
	}
	Parameter "affect_background" input
	{
		GUID = "{9061D678-8E3E-48D4-940F-F79F337EAC85}";
		Type = boolean;
		Value = on;
	}
	Parameter "affect_reflections" input
	{
		GUID = "{2535FEFB-CAC3-410C-BDEB-22BA9C4BF24E}";
		Type = boolean;
		Value = on;
	}
	Parameter "affect_refractions" input
	{
		GUID = "{3547308A-10A4-435E-A05A-5036ABA7B4FD}";
		Type = boolean;
		Value = on;
	}
	Parameter "affect_shadows" input
	{
		GUID = "{39F7031A-280A-4994-9EC4-754663F49155}";
		Type = boolean;
		Value = on;
	}
	Parameter "affect_gi" input
	{
		GUID = "{BE964B1B-00B9-4CCB-B7DC-CCAED56DDC95}";
		Type = boolean;
		Value = on;
	}
	Parameter "affect_camera" input
	{
		GUID = "{C13C7A11-9E64-4D6A-A5E1-54DFA91EA248}";
		Type = boolean;
		Value = on;
	}
	Parameter "yup" input
	{
		GUID = "{6A781769-3B47-4BD7-81BE-0F4D40B0AB62}";
		Type = boolean;
		Value = on;
	}
	
	Parameter "all_objects" input
	{		
		GUID		= "{0C58AF72-D2C0-4E81-8969-C5904E96BF6E}";		
		Type		= string;
	}
	Parameter "gizmos_list" input
	{		
		GUID		= "{8EF40AC2-EE23-4B56-A4F8-AA09FB0BB08D}";	
		Type		= string;
	}
	
	Parameter "all_obj_str" input
	{
		GUID		= "{26BE9C47-027E-4924-B2CB-D939BA1E24B3}";
		Type 		= string;
	}
	Parameter "gizmo_obj_str" input
	{
		GUID		= "{D92EDAD7-28E8-4F36-8C81-B9081E3BFF20}";
		Type 		= string;
	}
	
	Parameter "gizmo_fade_out_radius" input
	{
		GUID		= "{A1BA4195-B122-4461-BABA-A4AF04D70B1D}";
		Type		= scalar;
		Value		= 0.0;
		Value Minimum = 0.0;
		Value Maximum = 10000.0;
		Animatable	= off;
	}
    
	Parameter "lights" input
	{
		title = "Light List";
		GUID = "{BFE7F55A-95DC-45B5-A9CC-A8BC32CA8449}";		
		Texturable  = off;
		Type = array
		{
			Parameter "lights" input
			{
				title = "Light";
				GUID = "{CDE3D9A3-EC06-4041-BDC3-9E7A67F133F3}";
				Texturable = off;
				Type = light;
			}
		};
	}
	Parameter "lights_list_mode" input
	{
		GUID = "{D816C797-CFAB-49EE-90D9-92B66E5603B7}";
		Type = integer;
		Value = 1;
	}	
}

MetaShader "VRayEnvFog_meta"
{
	Name = "VRay Environment Fog";
	Type = volume, volume photon;
	Renderer "mental ray"
	{
		Name = "VRayEnvFog";
		FileName = "VRayEnvFog";
		Options
		{
			"version" = 1;
		}
	}
}

Defaults
{
	emission
	{
		Name = "Emission";
		UIType = "rgb";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
	}
	color
	{
		Name = "Color";
		UIType = "rgb";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
	}
	emission_mult
	{
		Name = "Emission Multiplier";
		UIRange = 0.0 To 1.0;
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
	}
	distance
	{
		Name = "Fog distance";
		UIRange = 0.0 To 1000.0;
	}
	density
	{
		Name = "Fog density";
		UIRange = 0.0 To 1.0;
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
	}
	height
	{
		Name = "Fog height";
		UIRange = 0.0 To 200.0;
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
	}
	subdivs
	{
		Name = "Subdivs";
		UIRange = 1 To 32;
	}
	scatter_gi
	{
		Name = "Scatter GI";
	}
	scatter_bounces
	{
		Name = "Scatter bounces";
	}
	simplify_gi
	{
		Name = "Simplify textures for GI";
	}
	step_size
	{
		Name = "Step size";
		UIRange = 0.0 To 10.0;
	}
	max_steps
	{
		Name = "Max steps";
		UIRange = 0.0 To 1000.0;
	}
	tex_samples
	{
		Name = "Texture samples";
		UIRange = 0 To 100;
	}
	cutoff_threshold
	{
		Name = "Cut off threshold";
		UIRange = 0.0 To 1.0;
	}
	fade_out_mode
	{
		Name = "Fade Out Mode";
		Range = 0 to 1;
		UIType = "Combo";
        Items
        {
           "Multiply by density" = 0
           "Add density to falloff" = 1
        }
	}
	fade_out_radius
	{
		Name = "Fade out radius";
		UIRange = 0.0 To 100.0;
	}
	per_object_fade_out_radius
	{
		Name = "Per Object Fade Out Radius";
	}
	affect_background
	{
		Name = "Affect background";
	}
	affect_reflections
	{
		Name = "Affect reflection rays";
	}
	affect_refractions
	{
		Name = "Affect refraction rays";
	}
	affect_shadows
	{
		Name = "Affect shadow rays";
	}
	affect_gi
	{
		Name = "Affect GI rays";
	}
	affect_camera
	{
		Name = "Affect camera rays";
	}
	
	all_objects
	{
		Name = "Scene objects:";
		UIType = "ListBox";
	}
	gizmos_list
	{
		Name = "GIZMOS";
		UIType = "ListBox";
	}
	
	all_obj_str
	{
		Name = "StringToHoldSceneOBjcets";
	}
	gizmo_obj_str
	{
		Name = "String ToHoldGizmos";
	}
	
	gizmo_fade_out_radius
	{
		Name = "Fade out radius";
		UIRange = 0.0 To 100.0;
	}	

	lights
	{
		Name = "Lights";		
	}
    lights_list_mode
    {
		Name = "Light Mode";
		Range = 0 to 2;
		UIType = "Combo";
        Items
        {
           "No lights" = 0
           "Use all lights" = 1
           "Use lights from list" = 2	   
        }        
    }
}

Layout "Default"
{
	Tab "General"
	{
		Group "Common"
		{
			color;
			emission;
			emission_mult;
			distance;
			density;
			height;
			subdivs;
		}
		Group "GI"
		{
			scatter_gi;
			scatter_bounces;
		}
		Group "Raymarching"
		{
			simplify_gi;
			step_size;
			max_steps;
			tex_samples;
			cutoff_threshold;
		}
		Group "Fade Out"
		{
			fade_out_mode;
			fade_out_radius;
			per_object_fade_out_radius;
		}
		Group "Ray Filter"
		{
			affect_background;
			affect_reflections;
			affect_refractions;
			affect_shadows;
			affect_gi;
			affect_camera;
		}
	}
	Tab "Gizmos"
	{
		Row
		{
			Group "All objects in the scene:", 44%
			{
				all_objects;
			}
			Group, 12%
			{
				Button MoveToGizmos, AlignCenter = ">>";
				Button MoveToObjects, AlignCenter = "<<";				
			}
			Group "GIZMOS:", 44%
			{
				gizmos_list;
			}
		}
		
		Group "Fade out Radius"
		{
			Row
			{
				gizmo_fade_out_radius;
				Button SetFadeRadius, AlignCenter = "Set Fade out radius";
			}
		}
	}
    
    Tab "Lights"
	{
        lights_list_mode;
		lights;
	}
}

BeginScript
{
	// *** 'all_obj_str' and 'gizmo_obj_str' holds information about which objects 
	// *** from the scene are corespondingly included in which LisBox  
	// *** each of them is a string containing object names separated by '$'
	
	//When the EnvFog PPG is Init the objects from the scene must be 
	//added to the listBoxes of the fog 
	function Fill_Scene_Objs()
	{		
		var oScene 	= Application.ActiveProject.ActiveScene;
		var oRoot 	= oScene.Root;
		
		//gets all polygon objects from the scene
		var polies 	= oRoot.FindChildren("*", "", siMeshFamily);
		
		var all_objs_arr = PPG.all_obj_str.Value.split("$");			
		var giz_objs_arr = PPG.gizmo_obj_str.Value.split("$");
		
		var new_Giz_List = [];
		var new_All_List = [];
			
		for(i = 0; i < polies.Count; i++)
		{				
			var object_name = polies.Item(i).FullName;
			var in_gizmo_list = false;
			
			//If the object is allready in the Gizmo list of the fog it must remain there
			for(k = 0; k < giz_objs_arr.length; k++)
			{
				if(giz_objs_arr[k] == object_name)
				{
					new_Giz_List.push(giz_objs_arr[k]);
					in_gizmo_list = true;
					break;
				}
			}	
				
			if(!in_gizmo_list)	
				new_All_List.push(object_name);				
		}
		
		PPG.all_obj_str.Value = new_All_List.join("$");
		PPG.gizmo_obj_str.Value = new_Giz_List.join("$");
		
		PPG.Refresh(); // !!!
	}
	
	function OnbuttonClick(fromList, toList, uiListBox)
	{
		var oLayout = PPG.PPGLayout ;
		
		//Get the selection (it is separted by ";")
		var strSel = PPG.Inspected(0).Parameters(uiListBox).Value;
		
		//If nothing is selected and the user still presses the button do noyhing
		if(strSel.length == 0)
			return;
		
		var splitSel = strSel.split(";");	

		//Add the selected items to "toList"
		var tArr = [];
		var gizmoList = PPG.Inspected(0).Parameters(toList).Value;
		
		if(gizmoList.length)
			tArr.push(gizmoList);		
		
		for(i = 0; i < splitSel.length; i++)
		{
			tArr.push(splitSel[i]);
			
			// If the object is moved to All_objects from GIZMOS
			// and it has a "Fade_out_radius_Prop" property attached
			// remove the proeprty
			
			var object = Dictionary.GetObject(splitSel[i]);
			var props = object.GetPropertyFromName("Fade_Out_Radius_Prop");
			
			if(props != null)
				DeleteObj(splitSel[i] + ".Fade_Out_Radius_Prop");
		}
		
		var arr = tArr.join("$");
				
		PPG.Inspected(0).Parameters(toList).Value = arr;
		
		//Remove the selected items from "fromList"
		var newAllArr = [];
		var currentAllArr = PPG.Inspected(0).Parameters(fromList).Value.split("$");
		var selected;
		
		for(l = 0; l < currentAllArr.length; l++)
		{
			selected = false;
			
			for(k = 0; k < splitSel.length; k++)
				if(currentAllArr[l] == splitSel[k])
					selected = true;
					
			if(!selected)
				newAllArr.push(currentAllArr[l]);	
		}
		
		PPG.Inspected(0).Parameters(fromList).Value = newAllArr.join("$");		
		
		//Updating the listBoxes
		FromStrFill(PPG.all_obj_str.Value, "all_objects");
		FromStrFill(PPG.gizmo_obj_str.Value, "gizmos_list");
				
		PPG.Refresh(); // !!!
	}
	
	//Fills the ListBoxes getting information from the given strings 
	function FromStrFill(objs, ui_objs_item)
	{						
		var objs_arr = objs.split("$");
					
		var objs_lBox = PPG.PPGLayout.Item(ui_objs_item);
		var items = new Array(objs_arr.length * 2);
					
		for(i = 0; i < objs_arr.length; i++)
		{
			items[i * 2] = objs_arr[i]; //Label
			items[i * 2 + 1] = objs_arr[i]; //Value
		}
		
		items = items.sort();
		objs_lBox.UIItems = items;
					
		PPG.Refresh(); // !!!
	}
	
	function MoveToGizmos_OnClicked()
	{		
		OnbuttonClick("all_obj_str", "gizmo_obj_str", "all_objects");
	}
	
	function MoveToObjects_OnClicked()
	{		
		OnbuttonClick("gizmo_obj_str", "all_obj_str", "gizmos_list");
	}
	
	function SetFadeRadius_OnClicked()
	{	
		var SDKversion = VersionCommand();
		
		// Some property controls are not represented in erlier SDK versions
		if(SDKversion < 9000)
			return;
		
		var strSel = PPG.Inspected(0).Parameters("gizmos_list").Value;
		var splitSel = strSel.split(";");
		
		if(strSel.length == 0)
			return;
			
		// Fade out radius from the UI
		var radius_value = PPG.gizmo_fade_out_radius.Value;
		var obj_name;	
		var unused;
		
		// Enable "per_object_fade_out_radius"
		if(!PPG.per_object_fade_out_radius.Value)
			PPG.per_object_fade_out_radius.Value = true;
		
		// Add to each of the selected objects a property which holds float parameter 
		// representing the "fade_out_radius" for the current gizmo object
		// if this object already has sucj an property just update the "fade_out_radius" parameter
		for(i = 0; i < splitSel.length; i++)
		{
			obj_name = splitSel[i];
			var object = Dictionary.GetObject(obj_name);
			
			//version check
			var props = object.GetPropertyFromName("Fade_Out_Radius_Prop");
			
			if(props == null)
			{
				cpset = object.AddCustomProperty("Fade_Out_Radius_Prop", false );
				cpset.AddParameter( "fade_out_radius", siDouble, siClassifUnknown, siAnimatable, "Fade out Radius", "", unused , radius_value, 0.0, 10000.0, 0.0, 100.0 );
			}
			else
			{
				props.Parameters("fade_out_radius").Value = radius_value;
			}			
		}
		
		PPG.Refresh(); // !!!
	}
	
	function gizmos_list_OnChanged()
	{
		var SDKversion = VersionCommand();
			
		// Some property controls are not represented in earlier SDK versions
		if(SDKversion < 9000)
			return;
		
		// The value of the "fade_out_radius" parameter will be displayed for one selected object
		var strSel = PPG.Inspected(0).Parameters("gizmos_list").Value;
		var splitSel = strSel.split(";");
		
		if(splitSel.length > 1)
		{
			Logmessage("You've selected more than one object!");
			PPG.gizmo_fade_out_radius.Value = 0;
			return;
		}
			
		if(splitSel[0] == "")
			return;
		
		obj_name = splitSel[0];
		var object = Dictionary.GetObject(obj_name);
		
		// Read the "fade_out_radius" parameter from the "Fade_Out_Radius_Prop" property if the object has one
		var props = object.GetPropertyFromName("Fade_Out_Radius_Prop");
		if(props == null)
		{
			Logmessage("The object which you've selected has no \"fade_out_radius\" parameter set!");
			PPG.gizmo_fade_out_radius.Value = 0;
		}
		else
			PPG.gizmo_fade_out_radius.Value = props.Parameters("fade_out_radius").Value;
			
		PPG.Refresh();
	}
	
	function OnInit()
	{
		Fill_Scene_Objs();
		
		//Updating the listBoxes
		FromStrFill(PPG.all_obj_str.Value, "all_objects");
		FromStrFill(PPG.gizmo_obj_str.Value, "gizmos_list");
		
		var oPPGLayout = PPG.PPGLayout;

        var SDKversion = VersionCommand();
        // From XSI 2011 because of exporting issues
        if(SDKversion < 9000)
        {            
            lights_list_mode.Enable(false);
            lights.Enable(false);
        }
        
		var oItem = oPPGLayout.Item("all_objects");
		oItem.SetAttribute( "CY", 100 );
		oItem.SetAttribute( siUICY, 650);
		oItem.SetAttribute( siUICX, 130);
		oItem.SetAttribute( siUINoLabel, true );	 
		oItem.SetAttribute( "MultiSelectionListBox", true );

		var oItem = oPPGLayout.Item("gizmos_list");
		oItem.SetAttribute( "CY", 100 );
		oItem.SetAttribute( siUICY, 650);
		oItem.SetAttribute( siUICX, 130);
		oItem.SetAttribute( siUINoLabel, true );	 
		oItem.SetAttribute( "MultiSelectionListBox", true );
		
		PPG.Refresh(); // !!!
	}
}
EndScript

Plugin = Shader
{
	FileName = "VRayEnvFog";
}

HelpFile = "http://www.spot3d.com/vray/help/softimage/150R1/vrayenvironmentfog_params.htm";
