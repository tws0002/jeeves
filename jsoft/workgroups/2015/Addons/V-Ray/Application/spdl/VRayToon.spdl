# SPDL Generated by XSI Shader Wizard
SPDL
Version = "2.0.0.0";
Reference = "{40EE6B68-9872-4C71-AB8E-5C2E06C00824}";

Language = "JScript";

PropertySet "VRayToon_pset"
{
	Parameter "out" output
	{
		GUID = "{812DDE74-FC71-400E-BBC6-F87BF686EB26}"; 
		Type = color;
	}
	
	Parameter "line_color" input
	{
		GUID = "{9200BF38-4CC1-43F3-ABB4-CB333A0DC271}";
		Type = color;		
		Value = 0.0 0.0 0.0 1.0;
		Texturable = on;
	}
	Parameter "lineWidth" input
	{
		GUID = "{B3A37189-2E69-4446-95ED-9DF0568D5E7D}";
		Type = scalar;		
		Value = 1.5;		
		Texturable = on;
	}
	Parameter "opacity" input
	{
		GUID = "{9AEA5097-4B7C-434D-986D-54E89E2141FA}";
		Type = scalar;		
		Value = 1.0;
		Value Minimum = 0.0;
		Value Maximum = 1.0;
		Texturable = on;
	}	

	Parameter "traceBias" input
	{
		GUID = "{E9170AE9-D550-4C73-BD13-72B283D82094}";
		Type = scalar;		
		Value = 0.2;		
	}
	Parameter "overlapThreshold" input
	{
		GUID = "{1B53D27E-B3EF-4AB4-8D9E-A6483AB31474}";
		Type = scalar;		
		Value = 0.95;
		Value Minimum = 0.0;
		Value Maximum = 1.0;		
	}
	Parameter "normalThreshold" input
	{
		GUID = "{45AA4E71-E9DC-4859-83D7-1DFE9F4A0324}";
		Type = scalar;		
		Value = 0.7;
		Value Minimum = 0.0;
		Value Maximum = 1.0;		
	}	
	
	Parameter "widthType" input
	{
		GUID = "{E92F4D67-3F09-4A26-A02D-F39A37DAF5B3}";
		Type = VT_I4;
		UIType = "Combo";	
		Caps = Persistable;	
		Items
		{
			"Pixels" = 0,
			"World" = 1			
		}		
		Value = 0;		
	}

	Parameter "hideInnerEdges" input
	{
		GUID = "{146E7CAD-9124-437C-88C0-E7129B585275}";
		Type = boolean;		
		Value = off;
	}
	
	Parameter "doSecondaryRays" input
	{
		GUID = "{B7AEBACD-D0D6-4551-BD96-A3B86A1D9B07}";
		Type = boolean;		
		Value = off;	
	}
	
	Parameter "include_list_box" input
	{		
		GUID		= "{E441C7DC-01A5-4718-BD01-D761799FBC20}";		
		Type		= string;
	}
	Parameter "exclude_list_box" input
	{		
		GUID		= "{B4095610-949D-4D44-B53B-A3F136061FA1}";	
		Type		= string;
	}
	
	Parameter "include_objs_str" input
	{
		GUID		= "{0A96F0BF-3693-40E5-BE82-E0441D52EC6B}";
		Type 		= string;
	}
	Parameter "exclude_objs_str" input
	{
		GUID		= "{864FAC20-68A3-49E2-984B-E773BEFDD325}";
		Type 		= string;
	}
	
}

MetaShader "VRayToon_meta"
{
	Name = "VRayToon";
	Type = volume, volume photon;
	Renderer "mental ray"
	{
		Name = "VRayToon";
		FileName = "VRayToon";
		Options
		{
			"version" = 1;
		}
	}
}

Logic 
{		
}

Defaults
{
	line_color
	{
		Name = "Line color";
		UIType = "rgb";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
	}	
	lineWidth
	{
		Name = "Line width";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
		UIRange = 0.0 to 100;
	}	
	opacity
	{
		Name = "Opacity";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
	}	
	
	widthType
	{
		Name = "Width type";
	}	
	hideInnerEdges
	{
		Name = "Hide inner edges";
	}	

	normalThreshold
	{
		Name = "Normal threshold";
	}	
	overlapThreshold
	{
		Name = "Overlap threshold";
	}	
	traceBias
	{
		Name = "Trace bias";
		UIRange = 0.0 to 100;
	}	
	doSecondaryRays
	{
		Name = "Secondary rays";
	}
    include_list_box
	{
		Name = "Include list:";
		UIType = "ListBox";
	}
	exclude_list_box
	{
		Name = "Exclude list";
		UIType = "ListBox";
	}
	
	include_objs_str
	{
		Name = "StringToHoldInclusiveObjcets";
	}
	exclude_objs_str
	{
		Name = "StringToHoldExclusiveObjects";
	}
}

Layout "Default"
{
	Tab "VRayToon parameters"
	{
		line_color;
		widthType;
		lineWidth;
		opacity;
		hideInnerEdges;
		normalThreshold;
		overlapThreshold;
		traceBias;
		doSecondaryRays;
	}
	
	Tab "Include/Exclude objects"
	{
		Row
		{
			Group "Include list", 44%
			{
				include_list_box;
			}
			Group, 12%
			{
				Button MoveToExclude, AlignCenter = ">>";
				Button MoveToInclude, AlignCenter = "<<";				
			}
			Group "Exclude list", 44%
			{
				exclude_list_box;
			}
		}		
	}
}

BeginScript
{
	//'include_objs_str' and 'exclude_objs_str' holds information about which objects 
	//from the scene are corespondingly included in which LisBox  
	//each of them is a string containing object names separated by '$'
	
	//When the Toon PPG is Init the objects from the scene must be 
	//added to the listBoxes of the Toon shader getting the information 
    //from the "include_objs_str" and "exclude_objs_str" strings 
	function Fill_Scene_Objs()
	{		
		var oScene 	= Application.ActiveProject.ActiveScene;
		var oRoot 	= oScene.Root;
		
		//gets all polygon objects from the scene
        var scene_objs =  oRoot.FindChildren("*", "", siGeometryFamily);
		
		var excluded_objs_arr = PPG.exclude_objs_str.Value.split("$");
		
		var new_Exclude_List = [];
		var new_Include_List = [];
			
		for(i = 0; i < scene_objs.Count; i++)
		{				
			var object_name = scene_objs.Item(i).FullName;
			var in_exclude_list = false;
			
			//If the object is allready in the Exclude list of the Toon Shader it must remain there
			for(k = 0; k < excluded_objs_arr.length; k++)
			{
				if(excluded_objs_arr[k] == object_name)
				{
					new_Exclude_List.push(excluded_objs_arr[k]);
					in_exclude_list = true;
					break;
				}
			}	
				
			if(!in_exclude_list)	
				new_Include_List.push(object_name);				
		}
		
		PPG.include_objs_str.Value = new_Include_List.join("$");
		PPG.exclude_objs_str.Value = new_Exclude_List.join("$");
		
		PPG.Refresh(); // !!!
	}
	
	function OnbuttonClick(fromList, toList, uiListBox)
	{
		var oLayout = PPG.PPGLayout ;
		
		//Get the selection (it is separted by ";")
		var strSel = PPG.Inspected(0).Parameters(uiListBox).Value;
		
		//If nothing is selected and the user still presses the button do noyhing
		if(strSel.length == 0)
			return;
		
		var splitSel = strSel.split(";");	

		//Add the selected items to "toList"
		var tArr = [];
		var excludedList = PPG.Inspected(0).Parameters(toList).Value;
		
		if(excludedList.length)
			tArr.push(excludedList);		
		
		for(i = 0; i < splitSel.length; i++)
		{
			tArr.push(splitSel[i]);
		}
		
		var arr = tArr.join("$");
				
		PPG.Inspected(0).Parameters(toList).Value = arr;
		
		//Remove the selected items from "fromList"
		var newAllArr = [];
		var currentAllArr = PPG.Inspected(0).Parameters(fromList).Value.split("$");
		var selected;
		
		for(l = 0; l < currentAllArr.length; l++)
		{
			selected = false;
			
			for(k = 0; k < splitSel.length; k++)
				if(currentAllArr[l] == splitSel[k])
					selected = true;
					
			if(!selected)
				newAllArr.push(currentAllArr[l]);	
		}
		
		PPG.Inspected(0).Parameters(fromList).Value = newAllArr.join("$");		
		
		//Updating the listBoxes
		FromStrFill(PPG.include_objs_str.Value, "include_list_box");
		FromStrFill(PPG.exclude_objs_str.Value, "exclude_list_box");
				
		PPG.Refresh(); // !!!
	}
	
	//Fills the ListBoxes getting information from the given strings 
	function FromStrFill(objs, ui_objs_item)
	{						
		var objs_arr = objs.split("$");
					
		var objs_lBox = PPG.PPGLayout.Item(ui_objs_item);
		var items = new Array(objs_arr.length * 2);
					
		for(i = 0; i < objs_arr.length; i++)
		{
			items[i * 2] = objs_arr[i]; //Label
			items[i * 2 + 1] = objs_arr[i]; //Value
		}
		
		items = items.sort();
		objs_lBox.UIItems = items;
					
		PPG.Refresh(); // !!!
	}
	
	function MoveToExclude_OnClicked()
	{		
		OnbuttonClick("include_objs_str", "exclude_objs_str", "include_list_box");
	}
	
	function MoveToInclude_OnClicked()
	{		
		OnbuttonClick("exclude_objs_str", "include_objs_str", "exclude_list_box");
	}
    
	function OnInit()
	{
		Fill_Scene_Objs();
		
		//Updating the listBoxes
		FromStrFill(PPG.include_objs_str.Value, "include_list_box");
		FromStrFill(PPG.exclude_objs_str.Value, "exclude_list_box");
		
		var oPPGLayout = PPG.PPGLayout;
        
		var oItem = oPPGLayout.Item("include_list_box");
		oItem.SetAttribute( "CY", 100 );
		oItem.SetAttribute( siUICY, 650);
		oItem.SetAttribute( siUICX, 130);
		oItem.SetAttribute( siUINoLabel, true );	 
		oItem.SetAttribute( "MultiSelectionListBox", true );

		var oItem = oPPGLayout.Item("exclude_list_box");
		oItem.SetAttribute( "CY", 100 );
		oItem.SetAttribute( siUICY, 650);
		oItem.SetAttribute( siUICX, 130);
		oItem.SetAttribute( siUINoLabel, true );	 
		oItem.SetAttribute( "MultiSelectionListBox", true );
		
		PPG.Refresh(); // !!!
	}
}
EndScript

Plugin = Shader
{
	FileName = "VRayToon";
}

HelpFile = "http://www.spot3d.com/vray/help/softimage/150R1/vray_toon.htm";