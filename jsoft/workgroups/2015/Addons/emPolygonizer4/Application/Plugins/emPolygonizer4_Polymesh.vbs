' emPolygonizer4_PolymeshPlugin
' Initial code generated by XSI SDK Wizard
' Executed Fri Jun 12 12:57:13 UTC+0200 2009 by Administrator
' 

function XSILoadPlugin( in_reg )
	in_reg.Author = "Eric Mootz"
	in_reg.Name = "emPolygonizer4_PolymeshPlugin"
	in_reg.Email = "info@mootzoid.com"
	in_reg.URL = "http://www.mootzoid.com/"
	in_reg.Major = 1
	in_reg.Minor = 0
	in_reg.Help = "http://www.mootzoid.com/wb/pages/documentation/empolygonizer4_redirect_TheCPSPolymesh.html"

	in_reg.RegisterProperty "emPolygonizer4_Polymesh"
	'RegistrationInsertionPoint - do not remove this line

	XSILoadPlugin = true
end function

function XSIUnloadPlugin( in_reg )
	dim strPluginName
	strPluginName = in_reg.Name
	Application.LogMessage strPluginName & " has been unloaded.",siVerbose
	XSIUnloadPlugin = true
end function

function emPolygonizer4_Polymesh_Define( in_ctxt )
	dim oFCurveParam,oFCurve,oKey
	dim oCustomProperty
	set oCustomProperty = in_ctxt.Source
	' the parameter "Treat this Polygon Mesh as a Point Cloud"
	oCustomProperty.AddParameter2 "treatAsPointCloud",	siBool,		false,	,,,,							siClassifTopo,		siPersistable
	' ***
	' * the polygon mesh parameters
	' ***
	oCustomProperty.AddParameter2 "ppg_showall_main",	siBool,		false,	,,,,							siClassifUnknown,	siPersistable OR siSilent OR siNotInspectable
	oCustomProperty.AddParameter2 "ppg_showall_liquid",	siBool,		false,	,,,,							siClassifUnknown,	siPersistable OR siSilent OR siNotInspectable
	oCustomProperty.AddParameter2 "active",				siBool,		true,	,,,,							siClassifTopo,		siPersistable OR siAnimatable OR siKeyable
	oCustomProperty.AddParameter2 "use",				siInt4,		3,		0,100,			0,100,			siClassifTopo,		siPersistable OR siAnimatable OR siKeyable
	oCustomProperty.AddParameter2 "pointsPerSIsqrUnit",	siFloat,	3,		0.00001,,		1,30,			siClassifTopo,		siPersistable OR siAnimatable OR siKeyable
	oCustomProperty.AddParameter2 "isofactor",			siFloat,	1,		-100000,100000,	0,2,			siClassifTopo,		siPersistable OR siAnimatable OR siKeyable
	oCustomProperty.AddParameter2 "isofactor_wm_use",	siBool,		false,	,,,,							siClassifTopo,		siPersistable OR siAnimatable OR siKeyable
	oCustomProperty.AddParameter2 "isofactor_wm_name",	siString,	""		,,,,,							siClassifTopo,		siPersistable OR siReadOnly
	oCustomProperty.AddParameter2 "isofactor_wm_clname",siString,	""		,,,,,							siClassifTopo,		siPersistable OR siReadOnly OR siNotInspectable
	oCustomProperty.AddParameter2 "radius",				siFloat,	0.5,	0,100000,		0,2.5,			siClassifTopo,		siPersistable OR siAnimatable OR siKeyable
	oCustomProperty.AddParameter2 "radius_wm_use",		siBool,		false,	,,,,							siClassifTopo,		siPersistable OR siAnimatable OR siKeyable
	oCustomProperty.AddParameter2 "radius_wm_name",		siString,	""		,,,,,							siClassifTopo,		siPersistable OR siReadOnly
	oCustomProperty.AddParameter2 "radius_wm_clname",	siString,	""		,,,,,							siClassifTopo,		siPersistable OR siReadOnly OR siNotInspectable
	oCustomProperty.AddParameter2 "falloff",			siFloat,	0.25,	0,100000,		0,5,			siClassifTopo,		siPersistable OR siAnimatable OR siKeyable
	oCustomProperty.AddParameter2 "falloff_wm_use",		siBool,		false,	,,,,							siClassifTopo,		siPersistable OR siAnimatable OR siKeyable
	oCustomProperty.AddParameter2 "falloff_wm_name",	siString,	""		,,,,,							siClassifTopo,		siPersistable OR siReadOnly
	oCustomProperty.AddParameter2 "falloff_wm_clname",	siString,	""		,,,,,							siClassifTopo,		siPersistable OR siReadOnly OR siNotInspectable
	oCustomProperty.AddParameter2 "falloffType",		siInt4,		3,		0,100,			0,4,			siClassifTopo,		siPersistable OR siAnimatable OR siKeyable
	oCustomProperty.AddParameter2 "color_baseR",		siDouble,	0.95,	-100000,100000,	0,1,			siClassifUnknown,	siPersistable OR siAnimatable OR siKeyable
	oCustomProperty.AddParameter2 "color_baseG",		siDouble,	0.5,	-100000,100000,	0,1,			siClassifUnknown,	siPersistable OR siAnimatable OR siKeyable
	oCustomProperty.AddParameter2 "color_baseB",		siDouble,	0.2,	-100000,100000,	0,1,			siClassifUnknown,	siPersistable OR siAnimatable OR siKeyable
	oCustomProperty.AddParameter2 "color_baseA",		siDouble,	1.0,	-100000,100000,	0,1,			siClassifUnknown,	siPersistable OR siAnimatable OR siKeyable
	oCustomProperty.AddParameter2 "fadebasevertexcolor",siFloat,	1,		0,1,			0,1,			siClassifUnknown,	siPersistable OR siAnimatable OR siKeyable
	oCustomProperty.AddParameter2 "color_vcm_use",		siBool,		false,	,,,,							siClassifUnknown,	siPersistable OR siAnimatable OR siKeyable
	oCustomProperty.AddParameter2 "color_vcm_name",		siString,	""		,,,,,							siClassifUnknown,	siPersistable OR siReadOnly
	oCustomProperty.AddParameter2 "color_vcm_clname",	siString,	""		,,,,,							siClassifUnknown,	siPersistable OR siReadOnly OR siNotInspectable
	oCustomProperty.AddParameter2 "constructionMode1",	siInt4,		siConstructionModeSecondaryShape, ,, ,,	siClassifTopo,		siPersistable OR siAnimatable OR siKeyable
	oCustomProperty.AddParameter2 "constructionMode2",	siInt4,		siConstructionModeSecondaryShape, ,, ,,	siClassifTopo,		siPersistable OR siAnimatable OR siKeyable
	oCustomProperty.AddParameter2 "deformPush",			siDouble,	0,		-100000,100000,	-1,1,			siClassifUnknown,	siPersistable OR siAnimatable OR siKeyable
	'
	oCustomProperty.AddParameter2 "mtnActive",				siBool,		true,	,,,,							siClassifTopo,		siPersistable OR siAnimatable OR siKeyable
	oCustomProperty.AddParameter2 "mtnSpeed",				siFloat,	1,		0,10000000,		0,2,			siClassifTopo,		siPersistable OR siAnimatable OR siKeyable
	oCustomProperty.AddParameter2 "mtnOffset",				siFloat,	0,		-100000,100000,	-0.5,0.5,		siClassifTopo,		siPersistable OR siAnimatable OR siKeyable
	oCustomProperty.AddParameter2 "mtnPosition",			siInt4,		0,		,,				,,				siClassifTopo,		siPersistable OR siAnimatable OR siKeyable
	oCustomProperty.AddParameter2 "mtnCompRad",				siFloat,	1,		0,1,			0,1,			siClassifTopo,		siPersistable OR siAnimatable OR siKeyable
	'
	oCustomProperty.AddParameter2 "LFactive",				siBool,		true,	,,,,							siClassifTopo,		siPersistable OR siAnimatable OR siKeyable
	oCustomProperty.AddParameter2 "LFself",					siBool,		false,	,,,,							siClassifTopo,		siPersistable OR siAnimatable OR siKeyable
	oCustomProperty.AddParameter2 "LFcaster",				siBool,		true,	,,,,							siClassifTopo,		siPersistable OR siAnimatable OR siKeyable
	oCustomProperty.AddParameter2 "LFreceiver",				siBool,		true,	,,,,							siClassifTopo,		siPersistable OR siAnimatable OR siKeyable
	oCustomProperty.AddParameter2 "LFoptimizedplotting",	siBool,		true,	,,,,							siClassifTopo,		siPersistable OR siAnimatable OR siKeyable
	oCustomProperty.AddParameter2 "LFdetail",				siFloat,	1.5,	0.0001,100000,	0.5,4,			siClassifTopo,		siPersistable OR siAnimatable OR siKeyable
	oCustomProperty.AddParameter2 "LFdistance",				siFloat,	5,		0.0001,1000000,	0,10,			siClassifTopo,		siPersistable OR siAnimatable OR siKeyable
	oCustomProperty.AddParameter2 "LFiso",					siFloat,	1,		0,1000000,		0,2,			siClassifTopo,		siPersistable OR siAnimatable OR siKeyable
	oCustomProperty.AddParameter2 "LFthickness",			siFloat,	1,		0,1,			0,1,			siClassifTopo,		siPersistable OR siAnimatable OR siKeyable
	oCustomProperty.AddParameter2 "LFmeetingpoint",			siFloat,	0.4,	0,1,			0.1,1,			siClassifTopo,		siPersistable OR siAnimatable OR siKeyable
	oCustomProperty.AddParameter2 "LFneighMode",			siInt4,		1,		,,				,,				siClassifTopo,		siPersistable OR siAnimatable OR siKeyable
	oCustomProperty.AddParameter2 "LFneighMaxNum",			siFloat,	5,		0,,				1,15,			siClassifTopo,		siPersistable OR siAnimatable OR siKeyable
	oCustomProperty.AddParameter2 "LFneighMaxNumFade",		siFloat,	8,		0,,				1,15,			siClassifTopo,		siPersistable OR siAnimatable OR siKeyable
	oCustomProperty.AddParameter2 "LFneighMaxWeight",		siFloat,	9,		0,,				1,15,			siClassifTopo,		siPersistable OR siAnimatable OR siKeyable
	oCustomProperty.AddParameter2 "LFneighMaxWeightFade",	siFloat,	7,		0,,				1,15,			siClassifTopo,		siPersistable OR siAnimatable OR siKeyable
	'
	set oFCurveParam = oCustomProperty.AddFCurveParameter("LFprofile_overallfade")
	set oFCurve = oFCurveParam.Value
	oFCurve.BeginEdit
	oFCurve.RemoveKeys
	oFCurve.AddKey   0,		0
	oFCurve.AddKey	 1,		1
	set oKey = oFCurve.GetKey(0)
	oKey.RightTanX	= 0.65
	oKey.Locked		= true
	set oKey = oFCurve.GetKey(1)
	oKey.LeftTanX	= -0.2
	oFCurve.EndEdit
	'
	set oFCurveParam = oCustomProperty.AddFCurveParameter("LFprofile_overallprofile")
	set oFCurve = oFCurveParam.Value
	oFCurve.BeginEdit
	oFCurve.RemoveKeys
	oFCurve.AddKey   0,		1
	oFCurve.AddKey   0.5,	0.65
	oFCurve.AddKey	 1,		1
	set oKey = oFCurve.GetKey(0)
	oKey.RightTanY	= -0.225
	set oKey = oFCurve.GetKey(1)
	oKey.LeftTanY	= -0.225
	oFCurve.EndEdit
	'
	
	' ***
	' * the additional point cloud parameters
	' ***
	dim lgC1,lgC2,fpStr
	lgC1  = "Lagoa_PhaseID =="
	lgC2  = "0"
	fpStr = "iceData =="
	' tab "Main" stuff 
	oCustomProperty.AddParameter2 "pc_use",					siInt4,		2,		0,100,			0,100,		siClassifTopo,		siPersistable OR siAnimatable OR siKeyable
	oCustomProperty.AddParameter2 "strandsLOD",				siInt4,		1,		1,100000,		1,10,		siClassifTopo,		siPersistable OR siAnimatable OR siKeyable
	oCustomProperty.AddParameter2 "radius_mulbypntsize",	siBool,		false,	,,,,						siClassifTopo,		siPersistable OR siAnimatable OR siKeyable
	oCustomProperty.AddParameter2 "falloff_mulbypntsize",	siBool,		false,	,,,,						siClassifTopo,		siPersistable OR siAnimatable OR siKeyable
	oCustomProperty.AddParameter2 "use_pnt_color",			siBool,		true,	,,,,						siClassifUnknown,	siPersistable OR siAnimatable OR siKeyable
	' tab "Liquid" stuff
	oCustomProperty.AddParameter2 "LFuseICEdata",			siBool,		true,	,,,,						siClassifTopo,		siPersistable OR siAnimatable OR siKeyable
	' tab "Lagoa" stuff
	oCustomProperty.AddParameter2 "lgClothActive",			siBool,		false,	,,,,						siClassifTopo,		siPersistable OR siAnimatable OR siKeyable
	oCustomProperty.AddParameter2 "lgClothCondStr",			siString,	lgC1	,,,,,						siClassifTopo,		siPersistable
	oCustomProperty.AddParameter2 "lgClothCompVals",		siString,	lgC2	,,,,,						siClassifTopo,		siPersistable
	oCustomProperty.AddParameter2 "lgClothTopoData0",		siString,	"Lagoa_TopologyIndex",,,,,			siClassifTopo,		siPersistable
	oCustomProperty.AddParameter2 "lgClothTopoData1",		siString,	"Lagoa_TopologyRemoved"		,,,,,	siClassifTopo,		siPersistable
	oCustomProperty.AddParameter2 "lgClothExtrLength",		siFloat,	0,		0,100000,		0,3,		siClassifTopo,		siPersistable OR siAnimatable OR siKeyable
	oCustomProperty.AddParameter2 "lgClothExtrSubdivs",		siInt4,		0,		0,100000,		0,3,		siClassifTopo,		siPersistable OR siAnimatable OR siKeyable OR siReadOnly
	oCustomProperty.AddParameter2 "lgClothOnlyTrisQuads",	siBool,		true,	,,,,						siClassifTopo,		siPersistable 
	oCustomProperty.AddParameter2 "lgClothAutoCleanup",		siBool,		true,	,,,,						siClassifTopo,		siPersistable 
	' tab "Filter Points" stuff
	oCustomProperty.AddParameter2 "fpUse",					siBool,		false,	,,,,						siClassifTopo,		siPersistable OR siAnimatable OR siKeyable
	oCustomProperty.AddParameter2 "fpCondStrA",				siString,	fpStr	,,,,,						siClassifTopo,		siPersistable
	oCustomProperty.AddParameter2 "fpCompValA",				siFloat,	0,		,,				,,			siClassifTopo,		siPersistable OR siAnimatable OR siKeyable
	oCustomProperty.AddParameter2 "fpCondStrB",				siString,	fpStr	,,,,,						siClassifTopo,		siPersistable
	oCustomProperty.AddParameter2 "fpCompValB",				siFloat,	0,		,,				,,			siClassifTopo,		siPersistable OR siAnimatable OR siKeyable
	oCustomProperty.AddParameter2 "fpIf",					siInt4,		8,		,,				,,			siClassifTopo,		siPersistable OR siAnimatable OR siKeyable
	oCustomProperty.AddParameter2 "fpThen",					siInt4,		1,		,,				,,			siClassifTopo,		siPersistable OR siAnimatable OR siKeyable
	' tab "Advanced" stuff
	oCustomProperty.AddParameter2 "iceDataPosition",		siString,	"PointPosition",,,,,				siClassifTopo,		siPersistable
	oCustomProperty.AddParameter2 "iceDataVelocity",		siString,	"PointVelocity",,,,,				siClassifTopo,		siPersistable
	oCustomProperty.AddParameter2 "iceDataOrientation",		siString,	"Orientation",,,,,					siClassifTopo,		siPersistable
	oCustomProperty.AddParameter2 "iceDataColor",			siString,	"Color",,,,,						siClassifTopo,		siPersistable
	oCustomProperty.AddParameter2 "iceDataSize",			siString,	"Size",,,,,							siClassifTopo,		siPersistable
	oCustomProperty.AddParameter2 "iceDataStrandPosition",	siString,	"StrandPosition",,,,,				siClassifTopo,		siPersistable
	oCustomProperty.AddParameter2 "iceDataStrandOrientation",siString,	"StrandOrientation",,,,,			siClassifTopo,		siPersistable
	oCustomProperty.AddParameter2 "iceDataStrandColor",		siString,	"StrandColor",,,,,					siClassifTopo,		siPersistable
	oCustomProperty.AddParameter2 "iceDataStrandSize",		siString,	"StrandSize",,,,,					siClassifTopo,		siPersistable
	oCustomProperty.AddParameter2 "iceDataLFactive",		siString,	"_emP_LF_active",,,,,				siClassifTopo,		siPersistable
	oCustomProperty.AddParameter2 "iceDataLFself",			siString,	"_emP_LF_self",,,,,					siClassifTopo,		siPersistable
	oCustomProperty.AddParameter2 "iceDataLFcaster",		siString,	"_emP_LF_caster",,,,,				siClassifTopo,		siPersistable
	oCustomProperty.AddParameter2 "iceDataLFreceiver",		siString,	"_emP_LF_receiver",,,,,				siClassifTopo,		siPersistable
	oCustomProperty.AddParameter2 "iceDataLFdetail",		siString,	"_emP_LF_detail",,,,,				siClassifTopo,		siPersistable
	oCustomProperty.AddParameter2 "iceDataLFdistance",		siString,	"_emP_LF_distance",,,,,				siClassifTopo,		siPersistable
	oCustomProperty.AddParameter2 "iceDataLFiso",			siString,	"_emP_LF_iso",,,,,					siClassifTopo,		siPersistable
	oCustomProperty.AddParameter2 "iceDataLFthickness",		siString,	"_emP_LF_thickness",,,,,			siClassifTopo,		siPersistable
	oCustomProperty.AddParameter2 "iceDataLFmeetingpoint",	siString,	"_emP_LF_meetingpoint",,,,,			siClassifTopo,		siPersistable
	' ***
	' * done
	' ***
	emPolygonizer4_Polymesh_Define = true
end function

' ************************************************************
' * Layout for Polygon Mesh Mode
' ************************************************************
function myownDefineLayout_PolygonMesh( oLayout, LFprofile_height_overallfade, LFprofile_height_overallprofile, unused_ )
	dim oItem
	dim i
	dim ppgShowAllMain
	dim ppgShowAllLiquid

	' get value of "ppg_showall_main"
	If TypeName( PPG ) <> "Empty" Then
		ppgShowAllMain = PPG.ppg_showall_main.Value
	else
		ppgShowAllMain = False
	end if
	
	' get value of "ppg_showall_liquid"
	If TypeName( PPG ) <> "Empty" Then
		ppgShowAllLiquid = PPG.ppg_showall_liquid.Value
	else
		ppgShowAllLiquid = False
	end if

	' get value of "LFneighMode"
	dim ppgLFneighMode
	ppgLFneighMode = 0
	If TypeName( PPG ) <> "Empty" then
		ppgLFneighMode = PPG.LFneighMode.Value
	end if
	
	' define layout
	oLayout.Clear 
	oLayout.SetAttribute siUIDictionary, "None"
	' tab "Main"
	oLayout.AddTab "Main"
		oLayout.AddRow
			if ppgShowAllMain then i = "Hide" else i = "Show"
			i = i & " Weight Map Parameters"
			oLayout.AddButton "BtnShowMain", i							' Show/Hide Weight Map Parameters
			oLayout.AddItem "active",									"Active"
		oLayout.Endrow
		Dim lv1(7)
		lv1(0) = "Use Object's Center"
		lv1(1) = 0
		lv1(2) = "Use Points"
		lv1(3) = 1
		lv1(4) = "Use Polygons (+ LOD)"
		lv1(5) = 3
		lv1(6) = "Use Volume and Polygons (+ LOD)"
		lv1(7) = 6
		oLayout.AddEnumControl "use", lv1,								"Use", siControlCombo
		oLayout.AddItem "pointsPerSIsqrUnit",							"LOD"
		oLayout.AddGroup "Size and Influence"
			if ppgShowAllMain then oLayout.AddGroup "Isofactor"
				oLayout.AddItem "isofactor",							"Isofactor"
				if ppgShowAllMain then
					oLayout.AddItem "isofactor_wm_use",					"Multiply Isofactor by Weight Map"
					oLayout.AddRow
						oLayout.AddItem "isofactor_wm_name",			"Weight Map:"
						oLayout.AddButton "Pick_isofactor_wm",			"Pick"
					oLayout.Endrow
				end if
			if ppgShowAllMain then oLayout.EndGroup
			if ppgShowAllMain then oLayout.AddGroup "Radius"
				oLayout.AddItem "radius",								"Radius"
				if ppgShowAllMain then
					oLayout.AddItem "radius_wm_use",					"Multiply Radius by Weight Map"
					oLayout.AddRow
						oLayout.AddItem "radius_wm_name",				"Weight Map:"
						oLayout.AddButton "Pick_radius_wm",				"Pick"
					oLayout.Endrow
				end if
			if ppgShowAllMain then oLayout.EndGroup
			if ppgShowAllMain then oLayout.AddGroup "Falloff"
				oLayout.AddItem "falloff",								"Falloff"
				Dim lv2(9)
				lv2(0) = "None"
				lv2(1) = 0
				lv2(2) = "Square Root"
				lv2(3) = 1
				lv2(4) = "Linear"
				lv2(5) = 2
				lv2(6) = "Square"
				lv2(7) = 3
				lv2(8) = "Cubic"
				lv2(9) = 4
				oLayout.AddEnumControl "falloffType", lv2,				"Falloff Type", siControlCombo
				if ppgShowAllMain then
					oLayout.AddItem "falloff_wm_use",					"Multiply Falloff by Weight Map"
					oLayout.AddRow
						oLayout.AddItem "falloff_wm_name",				"Weight Map:"
						oLayout.AddButton "Pick_falloff_wm",			"Pick"
					oLayout.Endrow
				end if
			if ppgShowAllMain then oLayout.EndGroup
		oLayout.EndGroup
		oLayout.AddGroup "Color"
			oLayout.AddColor "color_baseR",								"Base Color",true
			oLayout.AddItem "fadebasevertexcolor",						"Base/Vertex"
			if ppgShowAllMain then
				oLayout.AddGroup "Vertex Colors"
					oLayout.AddItem "color_vcm_use",					"Use Vertex Color Map"
					oLayout.AddRow
						oLayout.AddItem "color_vcm_name",				"Vertex Color Map"
						oLayout.AddButton "Pick_color_vcm", "Pick"
					oLayout.Endrow
				oLayout.EndGroup
			end if
		oLayout.EndGroup
	' tab "Motion"
	oLayout.AddTab "Motion"
		oLayout.AddGroup "Motion Plotting"
			oLayout.AddSpacer ,4
			oLayout.AddItem "mtnActive",	"Active"
			oLayout.AddItem "mtnSpeed",		"Speed"
			oLayout.AddItem "mtnOffset",	"Offset"
			Dim lvMntPos(5)
			lvMntPos(0) = "Center at Frame"
			lvMntPos(1) = 0
			lvMntPos(2) = "Start at Frame"
			lvMntPos(3) = 1
			lvMntPos(4) = "End at Frame"
			lvMntPos(5) = 2
			oLayout.AddEnumControl "mtnPosition", lvMntPos, "Position", siControlCombo
			set oItem = oLayout.AddItem( "mtnCompRad",	"Compensate Radius and Falloff" )
			oItem.SetAttribute siUILabelPercentage, 90
		oLayout.EndGroup
	' tab "Liquid"
	oLayout.AddTab "Liquid"
		oLayout.AddGroup "Liquid Filaments"
			oLayout.AddSpacer ,4
			oLayout.AddRow
				oLayout.AddGroup "", false, 33
					if ppgShowAllLiquid then i = "Hide" else i = "Show"
					i = i & " Profile FCurves"
					oLayout.AddButton "BtnShowLiquid", i	' Show/Hide Profiles
					oLayout.AddItem "LFactive",				"Active"
				oLayout.EndGroup
				oLayout.AddGroup "Direction of Filaments"
					oLayout.AddItem "LFself",			"Self  <--->  Self"
					oLayout.AddItem "LFcaster",			"Self    --->  Neighbors"
					oLayout.AddItem "LFreceiver",		"Self  <---    Neighbors"
				oLayout.EndGroup
			oLayout.Endrow
			set oItem = oLayout.AddItem("LFdistance",	"Filament Lengths (relative to their Radius and Falloff)")
			oItem.SetAttribute siUILabelPercentage,	60
			oLayout.AddGroup " "
				oLayout.AddItem "LFoptimizedplotting",	"Optimized Plotting"
				set oItem = oLayout.AddItem("LFdetail",		"Level of Detail")
				oItem.SetAttribute siUILabelPercentage, 60
				oLayout.AddItem "LFiso",			"Iso Multiplier"
				oLayout.AddItem "LFthickness",		"Thickness"
				oLayout.AddItem "LFmeetingpoint",	"Meeting at"
			oLayout.EndGroup
			oLayout.AddGroup "Neighboring"
				Dim lvNM(3)
				lvNM( 0) = "by Number of Neighbors"
				lvNM( 1) = 0
				lvNM( 2) = "by Weight of Neighbors"
				lvNM( 3) = 1
				set oItem = oLayout.AddEnumControl("LFneighMode",lvNM,"Filter",siControlCombo)
				if ppgLFneighMode = 0 then
					set oItem = oLayout.AddItem("LFneighMaxNum",		"Max Number")
					oItem.SetAttribute siUILabelPercentage, 50
					set oItem = oLayout.AddItem("LFneighMaxNumFade",	"Fade")
					oItem.SetAttribute siUILabelPercentage, 50
				elseif ppgLFneighMode = 1 then
					set oItem = oLayout.AddItem("LFneighMaxWeight",		"Max Weight")
					oItem.SetAttribute siUILabelPercentage, 50
					set oItem = oLayout.AddItem("LFneighMaxWeightFade",	"Fade")
					oItem.SetAttribute siUILabelPercentage, 50
				else
					oLayout.AddStaticText "Not implemented."
				end if
			oLayout.EndGroup
		oLayout.EndGroup
		if ppgShowAllLiquid then
			oLayout.AddGroup "Profiles"
				oLayout.AddSpacer 0, 10
				oLayout.AddGroup "Overall Fade"
					oLayout.AddRow			
						oLayout.AddSpacer 0,0
						oLayout.AddGroup "FCurve Window"
							oLayout.AddRow			
								oLayout.AddButton "BtnFCurveDisplaySmall",					"Small"
								oLayout.AddButton "BtnFCurveDisplayLarge_overallfade",		"Large"
							oLayout.EndRow
						oLayout.EndGroup
					oLayout.EndRow
					oLayout.AddFCurve "LFprofile_overallfade", LFprofile_height_overallfade
				oLayout.EndGroup
				oLayout.AddSpacer 0, 10
				oLayout.AddGroup "Size Ratio"
					oLayout.AddRow			
						oLayout.AddSpacer 0,0
						oLayout.AddGroup "FCurve Window"
							oLayout.AddRow			
								oLayout.AddButton "BtnFCurveDisplaySmall",					"Small"
								oLayout.AddButton "BtnFCurveDisplayLarge_overallprofile",	"Large"
							oLayout.EndRow
						oLayout.EndGroup
					oLayout.EndRow
					oLayout.AddFCurve "LFprofile_overallprofile", LFprofile_height_overallprofile
				oLayout.EndGroup
			oLayout.EndGroup
		end if
	' tab "Miscellaneous"
	oLayout.AddTab "Miscellaneous"
		oLayout.AddGroup "Construction Modes .."
			Dim lv7(7)
			lv7(0) = "siConstructionModeModeling"
			lv7(1) = siConstructionModeModeling
			lv7(2) = "siConstructionModePrimaryShape"
			lv7(3) = siConstructionModePrimaryShape
			lv7(4) = "siConstructionModeAnimation"
			lv7(5) = siConstructionModeAnimation
			lv7(6) = "siConstructionModeSecondaryShape"
			lv7(7) = siConstructionModeSecondaryShape
			oLayout.AddSpacer ,8
			oLayout.AddGroup ".. when calculating Locations"
				set oItem = oLayout.AddEnumControl("constructionMode1", lv7, "", siControlCombo)
				oItem.SetAttribute siUINoLabel,  true
			oLayout.EndGroup
			oLayout.AddGroup ".. when evaluating Locations"
				set oItem = oLayout.AddEnumControl("constructionMode2", lv7, "", siControlCombo)
				oItem.SetAttribute siUINoLabel,  true
			oLayout.EndGroup
		oLayout.EndGroup
		oLayout.AddGroup "Deform"
			oLayout.AddSpacer ,8
			set oItem = oLayout.AddItem("deformPush",	"Push Polygons")
			oItem.SetAttribute siUILabelPercentage, 50
		oLayout.EndGroup
	' tab "Advanced"
	oLayout.AddTab "Advanced"
		oLayout.AddGroup "Mode"
			oLayout.AddItem "treatAsPointCloud",	"Treat this Polygon Mesh as a Point Cloud"
		oLayout.EndGroup
end function

' ************************************************************
' * Layout for Point Cloud Mode
' ************************************************************
function myownDefineLayout_PointCloud( oLayout, LFprofile_height_overallfade, LFprofile_height_overallprofile, unused_ )
	dim oItem

	dim i
	dim ppgShowAllLiquid

	' get value of "ppg_showall_liquid"
	If TypeName( PPG ) <> "Empty" Then
		ppgShowAllLiquid = PPG.ppg_showall_liquid.Value
	else
		ppgShowAllLiquid = False
	end if

	' get value of "LFneighMode"
	dim ppgLFneighMode
	ppgLFneighMode = 0
	If TypeName( PPG ) <> "Empty" then
		ppgLFneighMode = PPG.LFneighMode.Value
	end if

	oLayout.Clear 
	oLayout.SetAttribute siUIDictionary, "None"
	' tab "Main"
	oLayout.AddTab "Main"
		oLayout.AddItem "active",									"Active"
		Dim lv5(5)
		lv5(0) = "Use Object's Center"
		lv5(1) = 0
		lv5(2) = "Use Points"
		lv5(3) = 1
		lv5(4) = "Use Points and Strands+LOD"
		lv5(5) = 2
		oLayout.AddEnumControl "pc_use", lv5,						"Use", siControlCombo
		oLayout.AddItem "strandsLOD",								"LOD"
		oLayout.AddGroup "Size and Influence"
			oLayout.AddItem "isofactor",							"Isofactor"
			oLayout.AddItem "radius",								"Radius"
			oLayout.AddItem "radius_mulbypntsize",					"Multiply Radius by Point Size"
			oLayout.AddItem "falloff",								"Falloff"
			Dim lv9(9)
			lv9(0) = "None"
			lv9(1) = 0
			lv9(2) = "Square Root"
			lv9(3) = 1
			lv9(4) = "Linear"
			lv9(5) = 2
			lv9(6) = "Square"
			lv9(7) = 3
			lv9(8) = "Cubic"
			lv9(9) = 4
			oLayout.AddEnumControl "falloffType", lv9,				"Falloff Type", siControlCombo
			oLayout.AddItem "falloff_mulbypntsize",					"Multiply Falloff by Point Size"
		oLayout.EndGroup
		oLayout.AddGroup "Color"
			oLayout.AddColor "color_baseR",							"Base Color",true
			oLayout.AddGroup
				oLayout.AddItem "use_pnt_color",					"Use Point/Particle Color (if available)"
				oLayout.AddItem "fadebasevertexcolor",				"Base/Vertex"
			oLayout.EndGroup
		oLayout.EndGroup
	' tab "Motion"
	oLayout.AddTab "Motion"
		oLayout.AddGroup "Motion Plotting"
			oLayout.AddSpacer ,4
			oLayout.AddItem "mtnActive",	"Active"
			oLayout.AddItem "mtnSpeed",		"Speed"
			oLayout.AddItem "mtnOffset",	"Offset"
			Dim lvMntPos(5)
			lvMntPos(0) = "Center at Frame"
			lvMntPos(1) = 0
			lvMntPos(2) = "Start at Frame"
			lvMntPos(3) = 1
			lvMntPos(4) = "End at Frame"
			lvMntPos(5) = 2
			oLayout.AddEnumControl "mtnPosition", lvMntPos, "Position", siControlCombo
			set oItem = oLayout.AddItem( "mtnCompRad",	"Compensate Radius and Falloff" )
			oItem.SetAttribute siUILabelPercentage, 90
		oLayout.EndGroup
	' tab "Liquid"
	oLayout.AddTab "Liquid"
		oLayout.AddGroup "Liquid Filaments"
			oLayout.AddSpacer ,4
			oLayout.AddRow
				oLayout.AddGroup "", false, 33
					if ppgShowAllLiquid then i = "Hide" else i = "Show"
					i = i & " Profile FCurves"
					oLayout.AddButton "BtnShowLiquid", i	' Show/Hide Profiles
					oLayout.AddItem "LFactive",				"Active"
					oLayout.AddItem "LFuseICEdata",		"Use ICE Data (if available)"
				oLayout.EndGroup
				oLayout.AddGroup "Direction of Filaments"
					oLayout.AddItem "LFself",			"Self  <--->  Self"
					oLayout.AddItem "LFcaster",			"Self    --->  Neighbors"
					oLayout.AddItem "LFreceiver",		"Self  <---    Neighbors"
				oLayout.EndGroup
			oLayout.Endrow
			set oItem = oLayout.AddItem("LFdistance",	"Filament Lengths (relative to their Radius and Falloff)")
			oItem.SetAttribute siUILabelPercentage,	60
			oLayout.AddGroup " "
				oLayout.AddItem "LFoptimizedplotting",	"Optimized Plotting"
				set oItem = oLayout.AddItem("LFdetail",		"Level of Detail")
				oItem.SetAttribute siUILabelPercentage, 60
				oLayout.AddItem "LFiso",			"Iso Multiplier"
				oLayout.AddItem "LFthickness",		"Thickness"
				oLayout.AddItem "LFmeetingpoint",	"Meeting at"
			oLayout.EndGroup
			oLayout.AddGroup "Neighboring"
				Dim lvNM(3)
				lvNM( 0) = "by Number of Neighbors"
				lvNM( 1) = 0
				lvNM( 2) = "by Weight of Neighbors"
				lvNM( 3) = 1
				set oItem = oLayout.AddEnumControl("LFneighMode",lvNM,"Filter",siControlCombo)
				if ppgLFneighMode = 0 then
					set oItem = oLayout.AddItem("LFneighMaxNum",		"Max Number")
					oItem.SetAttribute siUILabelPercentage, 50
					set oItem = oLayout.AddItem("LFneighMaxNumFade",	"Fade")
					oItem.SetAttribute siUILabelPercentage, 50
				elseif ppgLFneighMode = 1 then
					set oItem = oLayout.AddItem("LFneighMaxWeight",		"Max Weight")
					oItem.SetAttribute siUILabelPercentage, 50
					set oItem = oLayout.AddItem("LFneighMaxWeightFade",	"Fade")
					oItem.SetAttribute siUILabelPercentage, 50
				else
					oLayout.AddStaticText "Not implemented."
				end if
			oLayout.EndGroup
		oLayout.EndGroup
		if ppgShowAllLiquid then
			oLayout.AddGroup "Profiles"
				oLayout.AddSpacer 0, 10
				oLayout.AddGroup "Overall Fade"
					oLayout.AddRow			
						oLayout.AddSpacer 0,0
						oLayout.AddGroup "FCurve Window"
							oLayout.AddRow			
								oLayout.AddButton "BtnFCurveDisplaySmall",					"Small"
								oLayout.AddButton "BtnFCurveDisplayLarge_overallfade",		"Large"
							oLayout.EndRow
						oLayout.EndGroup
					oLayout.EndRow
					oLayout.AddFCurve "LFprofile_overallfade", LFprofile_height_overallfade
				oLayout.EndGroup
				oLayout.AddSpacer 0, 10
				oLayout.AddGroup "Size Ratio"
					oLayout.AddRow			
						oLayout.AddSpacer 0,0
						oLayout.AddGroup "FCurve Window"
							oLayout.AddRow			
								oLayout.AddButton "BtnFCurveDisplaySmall",					"Small"
								oLayout.AddButton "BtnFCurveDisplayLarge_overallprofile",	"Large"
							oLayout.EndRow
						oLayout.EndGroup
					oLayout.EndRow
					oLayout.AddFCurve "LFprofile_overallprofile", LFprofile_height_overallprofile
				oLayout.EndGroup
			oLayout.EndGroup
		end if
	' tab "Filter Points"
	oLayout.AddTab "Filter Points"
		'oLayout.AddSpacer ,10
		oLayout.AddGroup "Use/Discard Particles depending on A and B"
			oLayout.AddSpacer ,4
			oLayout.AddItem "fpUse",	"Enable"
			oLayout.AddSpacer ,4
			oLayout.AddRow
				Dim lv23(23)
				lv23( 0) = "  If (A) Then"
				lv23( 1) = 0
				lv23( 2) = "  If (B) Then"
				lv23( 3) = 1
				lv23( 4) = "  If (!A) Then"
				lv23( 5) = 2
				lv23( 6) = "  If (!B) Then"
				lv23( 7) = 3
				lv23( 8) = "  If (A and B) Then"
				lv23( 9) = 4
				lv23(10) = "  If (A and !B) Then"
				lv23(11) = 5
				lv23(12) = "  If (!A and B) Then"
				lv23(13) = 6
				lv23(14) = "  If (!A and !B) Then"
				lv23(15) = 7
				lv23(16) = "  If (A or B) Then"
				lv23(17) = 8
				lv23(18) = "  If (A or !B) Then"
				lv23(19) = 9
				lv23(20) = "  If (!A or B) Then"
				lv23(21) = 10
				lv23(22) = "  If (!A or !B) Then"
				lv23(23) = 11
				set oItem = oLayout.AddEnumControl("fpIf",lv23,,siControlCombo)
				oItem.SetAttribute siUINoLabel,  true
				oItem.SetAttribute siUIWidthPercentage,55
				Dim lv3(3)
				lv3(0) = " Discard Point"
				lv3(1) = 0
				lv3(2) = "  Use Point"
				lv3(3) = 1
				set oItem = oLayout.AddEnumControl("fpThen",lv3,,siControlCombo)
				oItem.SetAttribute siUINoLabel,  true
				oItem.SetAttribute siUIWidthPercentage,45
			oLayout.EndRow
			oLayout.AddSpacer ,4
		oLayout.EndGroup
		oLayout.AddSpacer ,16
		oLayout.AddGroup "Definition of A and B"
			oLayout.AddSpacer ,6
			oLayout.AddRow
				oLayout.AddStaticText "   A is " & Chr(34) & "true" & Chr(34) & " if"
				oLayout.AddSpacer 0,0
				oLayout.AddButton "fpCheckA", "Check A's Syntax"
			oLayout.EndRow
			oLayout.AddRow
				set oItem = oLayout.AddItem("fpCondStrA")
				oItem.SetAttribute siUINoLabel, true
				oItem.SetAttribute siUIWidthPercentage, 70
				set oItem = oLayout.AddItem("fpCompValA")
				oItem.SetAttribute siUINoLabel,  true
				oItem.SetAttribute siUINoSlider, true
				oItem.SetAttribute siUIWidthPercentage, 30
			oLayout.EndRow
			oLayout.AddSpacer ,10
			oLayout.AddRow
				oLayout.AddStaticText "   B is " & Chr(34) & "true" & Chr(34) & " if"
				oLayout.AddSpacer 0,0
				oLayout.AddButton "fpCheckB", "Check B's Syntax"
			oLayout.EndRow
			oLayout.AddRow
				set oItem = oLayout.AddItem("fpCondStrB")
				oItem.SetAttribute siUINoLabel, true
				oItem.SetAttribute siUIWidthPercentage, 70
				set oItem = oLayout.AddItem("fpCompValB")
				oItem.SetAttribute siUINoLabel,  true
				oItem.SetAttribute siUINoSlider, true
				oItem.SetAttribute siUIWidthPercentage,30
			oLayout.EndRow
			oLayout.AddSpacer ,8
		oLayout.EndGroup
	' tab "Lagoa"
	oLayout.AddTab "Lagoa"
		if true then	' this can be false when Thiago is done with the final names for the ICE data
			oLayout.AddGroup "ICE Data - Topology"
				oLayout.AddItem "lgClothTopoData0", "N.Indices"
				oLayout.AddRow
					oLayout.AddItem "lgClothTopoData1", "N.Removed"
					oLayout.AddButton "lgClothCheckTopology", "Check"
				oLayout.EndRow
			oLayout.EndGroup
		end if
		oLayout.AddSpacer ,14
		oLayout.AddGroup "Cloth Meshing"
			oLayout.AddRow
				oLayout.AddGroup "", false
					oLayout.AddGroup ""
						oLayout.AddItem "lgClothActive",			"Enable"
					oLayout.EndGroup
					oLayout.AddGroup "ICE Data - Identifier"
						set oItem = oLayout.AddItem("lgClothCondStr")
						oItem.SetAttribute siUINoLabel, true
						oLayout.AddRow
							set oItem = oLayout.AddItem("lgClothCompVals")
							oItem.SetAttribute siUINoLabel, true
							oLayout.AddButton "lgClothCheckIdentifier", "Check"
						oLayout.EndRow
					oLayout.EndGroup
				oLayout.EndGroup
				oLayout.AddGroup "", false
					oLayout.AddGroup "Extrusion"
						oLayout.AddItem "lgClothExtrLength",	"Length"
						'oLayout.AddItem "lgClothExtrSubdivs",	"Subdivisions"
					oLayout.EndGroup
					oLayout.AddGroup "Misc"
						oLayout.AddItem "lgClothOnlyTrisQuads",		"Only Tris and Quads"
						oLayout.AddItem "lgClothAutoCleanup",		"Auto-Cleanup"
					oLayout.EndGroup
				oLayout.EndGroup
			oLayout.EndRow
		oLayout.EndGroup
	' tab "Advanced"
	oLayout.AddTab "Advanced"
		oLayout.AddGroup "Mode"
			oLayout.AddItem "treatAsPointCloud",	"Treat this Polygon Mesh as a Point Cloud"
		oLayout.EndGroup
		oLayout.AddGroup "Points/Particles - ICE Data"
			oLayout.AddRow
				oLayout.AddSpacer 0,0
				oLayout.AddButton "iceCheckDataPoint", "Check"
			oLayout.EndRow
			set oItem = oLayout.AddItem ("iceDataPosition",		"Position")
			oItem.SetAttribute siUILabelPercentage, 70
			set oItem = oLayout.AddItem ("iceDataVelocity",		"Velocity")
			oItem.SetAttribute siUILabelPercentage, 70
			set oItem = oLayout.AddItem ("iceDataOrientation",	"Orientation")
			oItem.SetAttribute siUILabelPercentage, 70
			set oItem = oLayout.AddItem ("iceDataColor",		"Color")
			oItem.SetAttribute siUILabelPercentage, 70
			set oItem = oLayout.AddItem ("iceDataSize",			"Size")
			oItem.SetAttribute siUILabelPercentage, 70
		oLayout.EndGroup
		oLayout.AddGroup "Strands - ICE Data"
			oLayout.AddRow
				oLayout.AddSpacer 0,0
				oLayout.AddButton "iceCheckDataStrand", "Check"
			oLayout.EndRow
			set oItem = oLayout.AddItem ("iceDataStrandPosition",		"Position")
			oItem.SetAttribute siUILabelPercentage, 70
			set oItem = oLayout.AddItem ("iceDataStrandOrientation",	"Orientation")
			oItem.SetAttribute siUILabelPercentage, 70
			set oItem = oLayout.AddItem ("iceDataStrandColor",			"Color")
			oItem.SetAttribute siUILabelPercentage, 70
			set oItem = oLayout.AddItem ("iceDataStrandSize",			"Size")
			oItem.SetAttribute siUILabelPercentage, 70
		oLayout.EndGroup
		oLayout.AddGroup "Liquid Filaments - ICE Data"
			Dim lperc
			lperc = 90
			oLayout.AddRow
				oLayout.AddSpacer 0,0
				oLayout.AddButton "iceCheckDataLiquidFilaments", "Check"
			oLayout.EndRow
			set oItem = oLayout.AddItem("iceDataLFactive",		"Active")
			oItem.SetAttribute siUILabelPercentage, lperc
			set oItem = oLayout.AddItem("iceDataLFself",		"Self  <--->  Self")
			oItem.SetAttribute siUILabelPercentage, lperc
			set oItem = oLayout.AddItem("iceDataLFcaster",		"Self    --->  Neighbors")
			oItem.SetAttribute siUILabelPercentage, lperc
			set oItem = oLayout.AddItem("iceDataLFreceiver",	"Self  <---    Neighbors")
			oItem.SetAttribute siUILabelPercentage, lperc
			set oItem = oLayout.AddItem("iceDataLFdistance",	"Filament Lengths")
			oItem.SetAttribute siUILabelPercentage, lperc
			set oItem = oLayout.AddItem("iceDataLFdetail",		"Level of Detail")
			oItem.SetAttribute siUILabelPercentage, lperc
			set oItem = oLayout.AddItem("iceDataLFiso",			"Iso Multiplier")
			oItem.SetAttribute siUILabelPercentage, lperc
			set oItem = oLayout.AddItem("iceDataLFthickness",	"Thickness")
			oItem.SetAttribute siUILabelPercentage, lperc
			set oItem = oLayout.AddItem("iceDataLFmeetingpoint","Meeting at")
			oItem.SetAttribute siUILabelPercentage, lperc
		oLayout.EndGroup
	'
end function

function myownDefineLayout( oLayout, LFprofile_height_overallfade, LFprofile_height_overallprofile, unused_ )
	' set mode
	dim modePointCloud
	If TypeName( PPG ) <> "Empty" Then
		modePointCloud = PPG.treatAsPointCloud.Value
	else
		modePointCloud = False
	end if
	' define layout depending on mode
	if modePointCloud = False then
		myownDefineLayout_PolygonMesh	oLayout, LFprofile_height_overallfade, LFprofile_height_overallprofile, unused_
	else
		myownDefineLayout_PointCloud	oLayout, LFprofile_height_overallfade, LFprofile_height_overallprofile, unused_
	end if
end function

function emPolygonizer4_Polymesh_DefineLayout( in_ctxt )
	dim oLayout
	set oLayout = in_ctxt.Source
	myownDefineLayout	oLayout, 150, 150, 150
	emPolygonizer4_Polymesh_DefineLayout = true
end function

function emPolygonizer4_Polymesh_OnInit( )
	myownDefineLayout PPG.PPGLayout, 150, 150, 150 
	PPG.Refresh
end function

function emPolygonizer4_Polymesh_OnClosed( )
end function

function emPolygonizer4_Polymesh_treatAsPointCloud_OnChanged( )
	myownDefineLayout PPG.PPGLayout, 150, 150, 150 
	PPG.Refresh
end function

function emPolygonizer4_Polymesh_BtnShowMain_OnClicked( )
	Dim a
	a = PPG.ppg_showall_main.Value 
	if a then a=false else a=true
	PPG.ppg_showall_main.Value = a
	myownDefineLayout PPG.PPGLayout, 150, 150, 150 
	PPG.Refresh
end function

function emPolygonizer4_Polymesh_BtnShowLiquid_OnClicked( )
	Dim a
	a = PPG.ppg_showall_liquid.Value 
	if a then a=false else a=true
	PPG.ppg_showall_liquid.Value = a
	myownDefineLayout PPG.PPGLayout, 150, 150, 150 
	PPG.Refresh
end function

function Pick_ClusterProperty( caption )
	dim s, us, ret, o
	o = ""
	If TypeName( PPG ) <> "Empty" Then
		if PPG.Inspected.Count>0 then
			o = PPG.Inspected(0).parent.fullname
		end if
	end if
	set ret = OpenTransientExplorer ( o, siSEFilterPropertiesAndPrimitives, 4, False, False )
	if TypeName( ret ) <> "Nothing" then
		if ret.count>0 then
			set o = GetValue(ret)
			if typename (o) = "ClusterProperty" then
				Pick_ClusterProperty = o.fullname
			else
				logmessage "not a cluster property: " & o
				Pick_ClusterProperty = ""
			end if
		end if
	end if
end function

function emPolygonizer4_Polymesh_Pick_isofactor_wm_OnClicked( )
	Dim s, us, wmap
	wmap = Pick_ClusterProperty( "Select a Weight Map" )
	if wmap <> "" then
	   s = Split(wmap,".")
	   us = ubound(s)
	   if us>1 then
			PPG.isofactor_wm_clname.Value	= s(us-1)	' put cluster name in *_wm_clname
			PPG.isofactor_wm_name.Value		= s(us)	' put cluster property name in *_wm_name
			PPG.isofactor_wm_use.Value		= true
	  end if
	end if
end function

function emPolygonizer4_Polymesh_Pick_radius_wm_OnClicked( )
	Dim s, us, wmap
	wmap = Pick_ClusterProperty( "Select a Weight Map" )
	if wmap <> "" then
	   s = Split(wmap,".")
	   us = ubound(s)
	   if us>1 then
			PPG.radius_wm_clname.Value	= s(us-1)	' put cluster name in *_wm_clname
			PPG.radius_wm_name.Value	= s(us)		' put cluster property name in *_wm_name
			PPG.radius_wm_use.Value		= true
	  end if
	end if
end function

function emPolygonizer4_Polymesh_Pick_falloff_wm_OnClicked( )
	Dim s, us, wmap
	wmap = Pick_ClusterProperty( "Select a Weight Map" )
	if wmap <> "" then
	   s = Split(wmap,".")
	   us = ubound(s)
	   if us>1 then
			PPG.falloff_wm_clname.Value	= s(us-1)	' put cluster name in *_wm_clname
			PPG.falloff_wm_name.Value	= s(us)		' put cluster property name in *_wm_name
			PPG.falloff_wm_use.Value	= true
	  end if
	end if
end function

function emPolygonizer4_Polymesh_Pick_color_vcm_OnClicked( )
	Dim s, us, wmap
	wmap = Pick_ClusterProperty( "Select a Vertex Color Map" )
	if wmap <> "" then
	   s = Split(wmap,".")
	   us = ubound(s)
	   if us>1 then
			PPG.color_vcm_clname.Value	= s(us-1)	' put cluster name in color_vcm_clname
			PPG.color_vcm_name.Value	= s(us)		' put cluster property name in color_vcm_name
			PPG.color_vcm_use.Value		= true
	  end if
	end if
end function

















' params: str					string with "expression"
'		  arrayICEDataNames		array of strings with additional ICE data names to check (only the existence, not the data type). This may be "".
'		  checkOnlyArray		if true then only the array is checked (str is ignored)
' this function returns the string "ok" on success,
' else it returns a string with an error description.
function checkSyntaxAndICEData( str, arrayICEDataNames, checkOnlyArray )
	'
	Dim found,dataType
	Dim x3dObj
	set x3dObj = PPG.Inspected(0).parent
	'if x3dObj.type <> "pointcloud" then
		checkSyntaxAndICEData = "Error:   This property page doesn't belong to a point cloud!"
	'	exit function
	'end if
	Dim attribs
	set attribs = x3dObj.ActivePrimitive.Geometry.ICEAttributes
	'
	if checkOnlyArray <> True then
		' check Syntax of str
		Dim t,a,n,o
		' remove unnecessary spaces
		t = Trim(str)
		do
			o = t
			t = Replace(o,"  "," ")
		Loop Until t = o
		' split result and check size of array a
		a = Split(t," ")
		n = 1+ubound(a)
		if n < 2 then
			checkSyntaxAndICEData = "Syntax Error:   ' " & t & " '" & VbCrLf & VbCrLf & "Maybe no space between the name and the operator" & VbCrLf & "Or empty string?"
			exit function
		end if
		if n > 2 then
			checkSyntaxAndICEData = "Syntax Error:   ' " & t & " '" & VbCrLf & VbCrLf & "Too many 'words'." & VbCrLf & "Maybe a space in the operator, i.e ' = = ' instead of ' == ' ?"
			exit function
		end if
		' check operator's Syntax
		o = a(1)
		if o<>"==" and o<>"!=" and o<>">" and o<>"<" and o<>">=" and o<>"<=" then
			checkSyntaxAndICEData = "Syntax Error:   ' " & t & " '" & VbCrLf & VbCrLf & "Unknown operator ' " & o & " '"
			exit function
		end if
		' check existence of ice data
		n = PPG.Inspected.Count
		if n <> 1 then
			checkSyntaxAndICEData = "The Syntax seems to be okay, but the existence of the ICE data could not be verified because the property page is inspecting more than one point cloud."
			exit function
		end if
		found = false
		dataType = 0
		for each o in attribs
			if StrComp(o.name,a(0),1) = 0 then
				found = true
			end if
			if o.name = a(0) then
				dataType = o.DataType
				exit for
			end if
		next
		if dataType = 0 then
			if found = false then
				checkSyntaxAndICEData = "Warning:   The ICE data ' " & a(0) & " ' could not be found."
			else
				checkSyntaxAndICEData = "Warning:   The ICE data ' " & a(0) & " ' could not be found." & VbCrLf & VbCrLf & "Note: the name of ICE data is case sensitive."
			end if
			exit function
		end if
		if dataType<>siICENodeDataBool and dataType<>siICENodeDataLong and dataType<>siICENodeDataFloat then
			checkSyntaxAndICEData = "Warning:   The ICE data ' " & a(0) & " ' has the wrong data type." & VbCrLf & VbCrLf & "Only boolean, integer and scalar are allowed."
			exit function
		end if 
	elseif IsArray(arrayICEDataNames) = True then
		Dim i,errs
		errs = False
		checkSyntaxAndICEData = "" & VbCrLf
		for i = 0 to ubound(arrayICEDataNames)
			n = Trim(arrayICEDataNames(i))
			found = false
			dataType = 0
			for each o in attribs
				if StrComp(o.name,n,1) = 0 then
					found = true
				end if
				if o.name = n then
					dataType = o.DataType
					exit for
				end if
			next
			if dataType = 0 then
				errs = True
				if found = false then
					checkSyntaxAndICEData = checkSyntaxAndICEData & vbTab & "ERROR:" & vbTab & "'" & n & "' (not found)" & VbCrLf
				else
					checkSyntaxAndICEData = checkSyntaxAndICEData & vbTab & "ERROR:" & vbTab & "'" & n & "' (case mismatch) " & VbCrLf
				end if
			end if
		next
		if errs then
			checkSyntaxAndICEData = checkSyntaxAndICEData & VbCrLf & VbCrLf & "Note: the name of ICE data is case sensitive."
			exit function
		end if
	end if
	' no errors
	checkSyntaxAndICEData = "ok"
end function

' params: str					string with comma separated numeric values
' this function returns the string "ok" on success,
' else it returns a string with an error description.
function checkSyntaxNumeric( str  )
	'
	Dim a,b,foundAtLeastOne
	a = Split(str,",")
	foundAtLeastOne = false
	for i = 0 to ubound(a)
		b = Trim(a(i))
		if b = "" then
			checkSyntaxNumeric = "Syntax Error:   " & VbCrLf & VbCrLf & "'empty' number. Maybe an unnecessary comma?"
			exit function
		end if
		if ubound(Split(b," ")) > 0 then
			checkSyntaxNumeric = "Syntax Error:   ' " & b & " '" & VbCrLf & VbCrLf & "contains too many spaces."
			exit function
		end if
		if IsNumeric(b) = false then
			checkSyntaxNumeric = "Syntax Error:   ' " & b & " '" & VbCrLf & VbCrLf & "does not represent a number."
			exit function
		else
			foundAtLeastOne = true
		end if
	next
	if foundAtLeastOne = false then
		checkSyntaxNumeric = "Syntax Error:   ' " & str & " '" & VbCrLf & VbCrLf & "does not contain any number."
		exit function
	else
		foundAtLeastOne = true
	end if
	' no errors
	checkSyntaxNumeric = "ok"
end function

function emPolygonizer4_Polymesh_fpCheckA_OnClicked( )
	Dim sMsg,sRet,flag
	' check Syntax
	sRet = checkSyntaxAndICEData(PPG.fpCondStrA.Value,"",false)
	if sRet = "ok" then
		sMsg = "   Syntax is valid.   "
		flag = 0
	else
		sMsg = sRet
		flag = siMsgInformation
	end if
	
	MsgBox sMsg, flag, "emPolygonizer4"
end function

function emPolygonizer4_Polymesh_fpCheckB_OnClicked( )
	Dim sMsg,sRet,flag
	' check Syntax
	sRet = checkSyntaxAndICEData(PPG.fpCondStrB.Value,"",false)
	if sRet = "ok" then
		sMsg = "   Syntax is valid.   "
		flag = 0
	else
		sMsg = sRet
		flag = siMsgInformation
	end if
	
	MsgBox sMsg, flag, "emPolygonizer4"
end function

function emPolygonizer4_Polymesh_lgClothCheckIdentifier_OnClicked( )
	Dim sMsg,sRet,flag
	' check Syntax
	sRet = checkSyntaxAndICEData(PPG.lgClothCondStr.Value,"",false)
	if sRet = "ok" then
		sRet = checkSyntaxNumeric (PPG.lgClothCompVals.Value)
		if sRet = "ok" then
			sMsg = "   Syntax is valid.   "
			flag = 0
		else
			sMsg = sRet
			flag = siMsgInformation
		end if
	else
		sMsg = sRet
		flag = siMsgInformation
	end if
	
	MsgBox sMsg, flag, "emPolygonizer4"
end function

function emPolygonizer4_Polymesh_lgClothCheckTopology_OnClicked( )
	Dim sMsg,sRet,flag
	' check Syntax
	Dim DataNames(1)
	DataNames(0) = PPG.lgClothTopoData0.Value
	DataNames(1) = PPG.lgClothTopoData1.Value
	sRet = checkSyntaxAndICEData("",DataNames,true)
	if sRet = "ok" then
		sMsg = "   Syntax is valid.   "
		flag = 0
	else
		sMsg = sRet
		flag = siMsgInformation
	end if
	
	MsgBox sMsg, flag, "emPolygonizer4"
end function

function emPolygonizer4_Polymesh_iceCheckDataPoint_OnClicked( )
	Dim sMsg,sRet,flag
	' check Syntax
	Dim DataNames(4)
	DataNames(0) = PPG.iceDataPosition.Value
	DataNames(1) = PPG.iceDataVelocity.Value
	DataNames(2) = PPG.iceDataOrientation.Value
	DataNames(3) = PPG.iceDataColor.Value
	DataNames(4) = PPG.iceDataSize.Value
	sRet = checkSyntaxAndICEData("",DataNames,true)
	if sRet = "ok" then
		sMsg = "   Syntax is valid.   "
		flag = 0
	else
		sMsg = sRet
		flag = siMsgInformation
	end if
	
	MsgBox sMsg, flag, "emPolygonizer4"
end function

function emPolygonizer4_Polymesh_iceCheckDataStrand_OnClicked( )
	Dim sMsg,sRet,flag
	' check Syntax
	Dim DataNames(3)
	DataNames(0) = PPG.iceDataStrandPosition.Value
	DataNames(1) = PPG.iceDataStrandOrientation.Value
	DataNames(2) = PPG.iceDataStrandColor.Value
	DataNames(3) = PPG.iceDataStrandSize.Value
	sRet = checkSyntaxAndICEData("",DataNames,true)
	if sRet = "ok" then
		sMsg = "   Syntax is valid.   "
		flag = 0
	else
		sMsg = sRet
		flag = siMsgInformation
	end if
	
	MsgBox sMsg, flag, "emPolygonizer4"
end function

function emPolygonizer4_Polymesh_iceCheckDataLiquidFilaments_OnClicked( )
	Dim sMsg,sRet,flag
	' check Syntax
	Dim DataNames(8)
	DataNames(0) = PPG.iceDataLFactive.Value
	DataNames(1) = PPG.iceDataLFself.Value
	DataNames(2) = PPG.iceDataLFcaster.Value
	DataNames(3) = PPG.iceDataLFreceiver.Value
	DataNames(4) = PPG.iceDataLFdistance.Value
	DataNames(5) = PPG.iceDataLFdetail.Value
	DataNames(6) = PPG.iceDataLFiso.Value
	DataNames(7) = PPG.iceDataLFthickness.Value
	DataNames(8) = PPG.iceDataLFmeetingpoint.Value
	sRet = checkSyntaxAndICEData("",DataNames,true)
	if sRet = "ok" then
		sMsg = "   Syntax is valid.   "
		flag = 0
	else
		sMsg = sRet
		flag = siMsgInformation
	end if
	
	MsgBox sMsg, flag, "emPolygonizer4"
end function

function emPolygonizer4_Polymesh_BtnFCurveDisplaySmall_OnClicked( )
	myownDefineLayout PPG.PPGLayout, 150, 150, 150
	PPG.Refresh
end function

function emPolygonizer4_Polymesh_BtnFCurveDisplayLarge_overallfade_OnClicked( )
	myownDefineLayout PPG.PPGLayout, 400, 150, 150
	PPG.Refresh
end function

function emPolygonizer4_Polymesh_BtnFCurveDisplayLarge_overallprofile_OnClicked( )
	myownDefineLayout PPG.PPGLayout, 150, 400, 150
	PPG.Refresh
end function

function emPolygonizer4_Polymesh_LFneighMode_OnChanged( )
	myownDefineLayout PPG.PPGLayout, 150, 150, 150
	PPG.Refresh
end function




